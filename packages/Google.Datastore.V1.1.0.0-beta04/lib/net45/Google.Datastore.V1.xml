<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Google.Datastore.V1</name>
    </assembly>
    <members>
        <member name="T:Google.Datastore.V1.ArrayValue">
            <summary>
             An array value.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Implicit(System.String[])~Google.Datastore.V1.ArrayValue">
            <summary>
            Converts an array to an <see cref="T:Google.Datastore.V1.ArrayValue"/> instance. Each value within <paramref name="values"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual implicit conversion. Any null input values are converted
            to instances of <see cref="T:Google.Datastore.V1.Value"/> with a kind of Null.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>An <see cref="T:Google.Datastore.V1.ArrayValue"/> with converted values, or <c>null</c> if <paramref name="values"/> is null.</returns>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Implicit(System.Int64[])~Google.Datastore.V1.ArrayValue">
            <summary>
            Converts an array to an <see cref="T:Google.Datastore.V1.ArrayValue"/> instance. Each value within <paramref name="values"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual implicit conversion.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>An <see cref="T:Google.Datastore.V1.ArrayValue"/> with converted values, or <c>null</c> if <paramref name="values"/> is null.</returns>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Implicit(System.Nullable{System.Int64}[])~Google.Datastore.V1.ArrayValue">
            <summary>
            Converts an array to an <see cref="T:Google.Datastore.V1.ArrayValue"/> instance. Each value within <paramref name="values"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual implicit conversion. Any null input values are converted
            to instances of <see cref="T:Google.Datastore.V1.Value"/> with a kind of Null.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>An <see cref="T:Google.Datastore.V1.ArrayValue"/> with converted values, or <c>null</c> if <paramref name="values"/> is null.</returns>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Implicit(Google.Datastore.V1.Key[])~Google.Datastore.V1.ArrayValue">
            <summary>
            Converts an array to an <see cref="T:Google.Datastore.V1.ArrayValue"/> instance. Each value within <paramref name="values"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual implicit conversion. Any null input values are converted
            to instances of <see cref="T:Google.Datastore.V1.Value"/> with a kind of Null.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>An <see cref="T:Google.Datastore.V1.ArrayValue"/> with converted values, or <c>null</c> if <paramref name="values"/> is null.</returns>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Implicit(System.Double[])~Google.Datastore.V1.ArrayValue">
            <summary>
            Converts an array to an <see cref="T:Google.Datastore.V1.ArrayValue"/> instance. Each value within <paramref name="values"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual implicit conversion.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>An <see cref="T:Google.Datastore.V1.ArrayValue"/> with converted values, or <c>null</c> if <paramref name="values"/> is null.</returns>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Implicit(System.Nullable{System.Double}[])~Google.Datastore.V1.ArrayValue">
            <summary>
            Converts an array to an <see cref="T:Google.Datastore.V1.ArrayValue"/> instance. Each value within <paramref name="values"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual implicit conversion. Any null input values are converted
            to instances of <see cref="T:Google.Datastore.V1.Value"/> with a kind of Null.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>An <see cref="T:Google.Datastore.V1.ArrayValue"/> with converted values, or <c>null</c> if <paramref name="values"/> is null.</returns>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Implicit(System.Boolean[])~Google.Datastore.V1.ArrayValue">
            <summary>
            Converts an array to an <see cref="T:Google.Datastore.V1.ArrayValue"/> instance. Each value within <paramref name="values"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual implicit conversion.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>An <see cref="T:Google.Datastore.V1.ArrayValue"/> with converted values, or <c>null</c> if <paramref name="values"/> is null.</returns>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Implicit(System.Nullable{System.Boolean}[])~Google.Datastore.V1.ArrayValue">
            <summary>
            Converts an array to an <see cref="T:Google.Datastore.V1.ArrayValue"/> instance. Each value within <paramref name="values"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual implicit conversion. Any null input values are converted
            to instances of <see cref="T:Google.Datastore.V1.Value"/> with a kind of Null.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>An <see cref="T:Google.Datastore.V1.ArrayValue"/> with converted values, or <c>null</c> if <paramref name="values"/> is null.</returns>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Implicit(Google.Datastore.V1.ArrayValue[])~Google.Datastore.V1.ArrayValue">
            <summary>
            Converts an array to an <see cref="T:Google.Datastore.V1.ArrayValue"/> instance. Each value within <paramref name="values"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual implicit conversion. Any null input values are converted
            to instances of <see cref="T:Google.Datastore.V1.Value"/> with a kind of Null.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>An <see cref="T:Google.Datastore.V1.ArrayValue"/> with converted values, or <c>null</c> if <paramref name="values"/> is null.</returns>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Implicit(Google.Protobuf.ByteString[])~Google.Datastore.V1.ArrayValue">
            <summary>
            Converts an array to an <see cref="T:Google.Datastore.V1.ArrayValue"/> instance. Each value within <paramref name="values"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual implicit conversion. Any null input values are converted
            to instances of <see cref="T:Google.Datastore.V1.Value"/> with a kind of Null.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>An <see cref="T:Google.Datastore.V1.ArrayValue"/> with converted values, or <c>null</c> if <paramref name="values"/> is null.</returns>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Implicit(System.Byte[][])~Google.Datastore.V1.ArrayValue">
            <summary>
            Converts an array to an <see cref="T:Google.Datastore.V1.ArrayValue"/> instance. Each value within <paramref name="values"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual implicit conversion. Any null input values are converted
            to instances of <see cref="T:Google.Datastore.V1.Value"/> with a kind of Null.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>An <see cref="T:Google.Datastore.V1.ArrayValue"/> with converted values, or <c>null</c> if <paramref name="values"/> is null.</returns>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Implicit(Google.Datastore.V1.Entity[])~Google.Datastore.V1.ArrayValue">
            <summary>
            Converts an array to an <see cref="T:Google.Datastore.V1.ArrayValue"/> instance. Each value within <paramref name="values"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual implicit conversion. Any null input values are converted
            to instances of <see cref="T:Google.Datastore.V1.Value"/> with a kind of Null.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>An <see cref="T:Google.Datastore.V1.ArrayValue"/> with converted values, or <c>null</c> if <paramref name="values"/> is null.</returns>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Implicit(Google.Type.LatLng[])~Google.Datastore.V1.ArrayValue">
            <summary>
            Converts an array to an <see cref="T:Google.Datastore.V1.ArrayValue"/> instance. Each value within <paramref name="values"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual implicit conversion. Any null input values are converted
            to instances of <see cref="T:Google.Datastore.V1.Value"/> with a kind of Null.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>An <see cref="T:Google.Datastore.V1.ArrayValue"/> with converted values, or <c>null</c> if <paramref name="values"/> is null.</returns>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Implicit(Google.Protobuf.WellKnownTypes.Timestamp[])~Google.Datastore.V1.ArrayValue">
            <summary>
            Converts an array to an <see cref="T:Google.Datastore.V1.ArrayValue"/> instance. Each value within <paramref name="values"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual implicit conversion. Any null input values are converted
            to instances of <see cref="T:Google.Datastore.V1.Value"/> with a kind of Null.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>An <see cref="T:Google.Datastore.V1.ArrayValue"/> with converted values, or <c>null</c> if <paramref name="values"/> is null.</returns>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Implicit(System.DateTime[])~Google.Datastore.V1.ArrayValue">
            <summary>
            Converts an array to an <see cref="T:Google.Datastore.V1.ArrayValue"/> instance. Each value within <paramref name="values"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual implicit conversion.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>An <see cref="T:Google.Datastore.V1.ArrayValue"/> with converted values, or <c>null</c> if <paramref name="values"/> is null.</returns>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Implicit(System.Nullable{System.DateTime}[])~Google.Datastore.V1.ArrayValue">
            <summary>
            Converts an array to an <see cref="T:Google.Datastore.V1.ArrayValue"/> instance. Each value within <paramref name="values"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual implicit conversion. Any null input values are converted
            to instances of <see cref="T:Google.Datastore.V1.Value"/> with a kind of Null.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>An <see cref="T:Google.Datastore.V1.ArrayValue"/> with converted values, or <c>null</c> if <paramref name="values"/> is null.</returns>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Implicit(System.DateTimeOffset[])~Google.Datastore.V1.ArrayValue">
            <summary>
            Converts an array to an <see cref="T:Google.Datastore.V1.ArrayValue"/> instance. Each value within <paramref name="values"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual implicit conversion.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>An <see cref="T:Google.Datastore.V1.ArrayValue"/> with converted values, or <c>null</c> if <paramref name="values"/> is null.</returns>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Implicit(System.Nullable{System.DateTimeOffset}[])~Google.Datastore.V1.ArrayValue">
            <summary>
            Converts an array to an <see cref="T:Google.Datastore.V1.ArrayValue"/> instance. Each value within <paramref name="values"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual implicit conversion. Any null input values are converted
            to instances of <see cref="T:Google.Datastore.V1.Value"/> with a kind of Null.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>An <see cref="T:Google.Datastore.V1.ArrayValue"/> with converted values, or <c>null</c> if <paramref name="values"/> is null.</returns>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Implicit(Google.Datastore.V1.Value[])~Google.Datastore.V1.ArrayValue">
            <summary>
            Converts an array to an <see cref="T:Google.Datastore.V1.ArrayValue"/> instance. Any null input values are converted
            to instances of <see cref="T:Google.Datastore.V1.Value"/> with a kind of Null.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>An <see cref="T:Google.Datastore.V1.ArrayValue"/> with converted values, or <c>null</c> if <paramref name="values"/> is null.</returns>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Explicit(Google.Datastore.V1.ArrayValue)~System.String[]">
            <summary>
            Converts an <see cref="T:Google.Datastore.V1.ArrayValue"/> to an array. Each value within <paramref name="arrayValue"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual explicit conversion. Any <see cref="T:Google.Datastore.V1.Value"/> elements with a kind of
            Null are converted to null values in the resulting array.
            </summary>
            <param name="arrayValue">The array value to convert.</param>
            <returns>An array with converted values, or <c>null</c> if <paramref name="arrayValue"/> is null.</returns>
            <exception cref="T:System.InvalidOperationException">An element in the array value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Explicit(Google.Datastore.V1.ArrayValue)~System.Int64[]">
            <summary>
            Converts an <see cref="T:Google.Datastore.V1.ArrayValue"/> to an array. Each value within <paramref name="arrayValue"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual explicit conversion.
            </summary>
            <param name="arrayValue">The array value to convert.</param>
            <returns>An array with converted values, or <c>null</c> if <paramref name="arrayValue"/> is null.</returns>
            <exception cref="T:System.InvalidOperationException">An element in the array value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Explicit(Google.Datastore.V1.ArrayValue)~System.Nullable{System.Int64}[]">
            <summary>
            Converts an <see cref="T:Google.Datastore.V1.ArrayValue"/> to an array. Each value within <paramref name="arrayValue"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual explicit conversion. Any <see cref="T:Google.Datastore.V1.Value"/> elements with a kind of
            Null are converted to null values in the resulting array.
            </summary>
            <param name="arrayValue">The array value to convert.</param>
            <returns>An array with converted values, or <c>null</c> if <paramref name="arrayValue"/> is null.</returns>
            <exception cref="T:System.InvalidOperationException">An element in the array value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Explicit(Google.Datastore.V1.ArrayValue)~Google.Datastore.V1.Key[]">
            <summary>
            Converts an <see cref="T:Google.Datastore.V1.ArrayValue"/> to an array. Each value within <paramref name="arrayValue"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual explicit conversion. Any <see cref="T:Google.Datastore.V1.Value"/> elements with a kind of
            Null are converted to null values in the resulting array.
            </summary>
            <param name="arrayValue">The array value to convert.</param>
            <returns>An array with converted values, or <c>null</c> if <paramref name="arrayValue"/> is null.</returns>
            <exception cref="T:System.InvalidOperationException">An element in the array value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Explicit(Google.Datastore.V1.ArrayValue)~System.Double[]">
            <summary>
            Converts an <see cref="T:Google.Datastore.V1.ArrayValue"/> to an array. Each value within <paramref name="arrayValue"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual explicit conversion.
            </summary>
            <param name="arrayValue">The array value to convert.</param>
            <returns>An array with converted values, or <c>null</c> if <paramref name="arrayValue"/> is null.</returns>
            <exception cref="T:System.InvalidOperationException">An element in the array value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Explicit(Google.Datastore.V1.ArrayValue)~System.Nullable{System.Double}[]">
            <summary>
            Converts an <see cref="T:Google.Datastore.V1.ArrayValue"/> to an array. Each value within <paramref name="arrayValue"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual explicit conversion. Any <see cref="T:Google.Datastore.V1.Value"/> elements with a kind of
            Null are converted to null values in the resulting array.
            </summary>
            <param name="arrayValue">The array value to convert.</param>
            <returns>An array with converted values, or <c>null</c> if <paramref name="arrayValue"/> is null.</returns>
            <exception cref="T:System.InvalidOperationException">An element in the array value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Explicit(Google.Datastore.V1.ArrayValue)~System.Boolean[]">
            <summary>
            Converts an <see cref="T:Google.Datastore.V1.ArrayValue"/> to an array. Each value within <paramref name="arrayValue"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual explicit conversion.
            </summary>
            <param name="arrayValue">The array value to convert.</param>
            <returns>An array with converted values, or <c>null</c> if <paramref name="arrayValue"/> is null.</returns>
            <exception cref="T:System.InvalidOperationException">An element in the array value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Explicit(Google.Datastore.V1.ArrayValue)~System.Nullable{System.Boolean}[]">
            <summary>
            Converts an <see cref="T:Google.Datastore.V1.ArrayValue"/> to an array. Each value within <paramref name="arrayValue"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual explicit conversion. Any <see cref="T:Google.Datastore.V1.Value"/> elements with a kind of
            Null are converted to null values in the resulting array.
            </summary>
            <param name="arrayValue">The array value to convert.</param>
            <returns>An array with converted values, or <c>null</c> if <paramref name="arrayValue"/> is null.</returns>
            <exception cref="T:System.InvalidOperationException">An element in the array value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Explicit(Google.Datastore.V1.ArrayValue)~Google.Datastore.V1.ArrayValue[]">
            <summary>
            Converts an <see cref="T:Google.Datastore.V1.ArrayValue"/> to an array. Each value within <paramref name="arrayValue"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual explicit conversion. Any <see cref="T:Google.Datastore.V1.Value"/> elements with a kind of
            Null are converted to null values in the resulting array.
            </summary>
            <param name="arrayValue">The array value to convert.</param>
            <returns>An array with converted values, or <c>null</c> if <paramref name="arrayValue"/> is null.</returns>
            <exception cref="T:System.InvalidOperationException">An element in the array value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Explicit(Google.Datastore.V1.ArrayValue)~Google.Protobuf.ByteString[]">
            <summary>
            Converts an <see cref="T:Google.Datastore.V1.ArrayValue"/> to an array. Each value within <paramref name="arrayValue"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual explicit conversion. Any <see cref="T:Google.Datastore.V1.Value"/> elements with a kind of
            Null are converted to null values in the resulting array.
            </summary>
            <param name="arrayValue">The array value to convert.</param>
            <returns>An array with converted values, or <c>null</c> if <paramref name="arrayValue"/> is null.</returns>
            <exception cref="T:System.InvalidOperationException">An element in the array value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Explicit(Google.Datastore.V1.ArrayValue)~System.Byte[][]">
            <summary>
            Converts an <see cref="T:Google.Datastore.V1.ArrayValue"/> to an array. Each value within <paramref name="arrayValue"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual explicit conversion. Any <see cref="T:Google.Datastore.V1.Value"/> elements with a kind of
            Null are converted to null values in the resulting array.
            </summary>
            <param name="arrayValue">The array value to convert.</param>
            <returns>An array with converted values, or <c>null</c> if <paramref name="arrayValue"/> is null.</returns>
            <exception cref="T:System.InvalidOperationException">An element in the array value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Explicit(Google.Datastore.V1.ArrayValue)~Google.Datastore.V1.Entity[]">
            <summary>
            Converts an <see cref="T:Google.Datastore.V1.ArrayValue"/> to an array. Each value within <paramref name="arrayValue"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual explicit conversion. Any <see cref="T:Google.Datastore.V1.Value"/> elements with a kind of
            Null are converted to null values in the resulting array.
            </summary>
            <param name="arrayValue">The array value to convert.</param>
            <returns>An array with converted values, or <c>null</c> if <paramref name="arrayValue"/> is null.</returns>
            <exception cref="T:System.InvalidOperationException">An element in the array value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Explicit(Google.Datastore.V1.ArrayValue)~Google.Type.LatLng[]">
            <summary>
            Converts an <see cref="T:Google.Datastore.V1.ArrayValue"/> to an array. Each value within <paramref name="arrayValue"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual explicit conversion. Any <see cref="T:Google.Datastore.V1.Value"/> elements with a kind of
            Null are converted to null values in the resulting array.
            </summary>
            <param name="arrayValue">The array value to convert.</param>
            <returns>An array with converted values, or <c>null</c> if <paramref name="arrayValue"/> is null.</returns>
            <exception cref="T:System.InvalidOperationException">An element in the array value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Explicit(Google.Datastore.V1.ArrayValue)~Google.Protobuf.WellKnownTypes.Timestamp[]">
            <summary>
            Converts an <see cref="T:Google.Datastore.V1.ArrayValue"/> to an array. Each value within <paramref name="arrayValue"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual explicit conversion. Any <see cref="T:Google.Datastore.V1.Value"/> elements with a kind of
            Null are converted to null values in the resulting array.
            </summary>
            <param name="arrayValue">The array value to convert.</param>
            <returns>An array with converted values, or <c>null</c> if <paramref name="arrayValue"/> is null.</returns>
            <exception cref="T:System.InvalidOperationException">An element in the array value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Explicit(Google.Datastore.V1.ArrayValue)~System.DateTime[]">
            <summary>
            Converts an <see cref="T:Google.Datastore.V1.ArrayValue"/> to an array. Each value within <paramref name="arrayValue"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual explicit conversion.
            </summary>
            <param name="arrayValue">The array value to convert.</param>
            <returns>An array with converted values, or <c>null</c> if <paramref name="arrayValue"/> is null.</returns>
            <exception cref="T:System.InvalidOperationException">An element in the array value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Explicit(Google.Datastore.V1.ArrayValue)~System.Nullable{System.DateTime}[]">
            <summary>
            Converts an <see cref="T:Google.Datastore.V1.ArrayValue"/> to an array. Each value within <paramref name="arrayValue"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual explicit conversion. Any <see cref="T:Google.Datastore.V1.Value"/> elements with a kind of
            Null are converted to null values in the resulting array.
            </summary>
            <param name="arrayValue">The array value to convert.</param>
            <returns>An array with converted values, or <c>null</c> if <paramref name="arrayValue"/> is null.</returns>
            <exception cref="T:System.InvalidOperationException">An element in the array value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Explicit(Google.Datastore.V1.ArrayValue)~System.DateTimeOffset[]">
            <summary>
            Converts an <see cref="T:Google.Datastore.V1.ArrayValue"/> to an array. Each value within <paramref name="arrayValue"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual explicit conversion.
            </summary>
            <param name="arrayValue">The array value to convert.</param>
            <returns>An array with converted values, or <c>null</c> if <paramref name="arrayValue"/> is null.</returns>
            <exception cref="T:System.InvalidOperationException">An element in the array value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Explicit(Google.Datastore.V1.ArrayValue)~System.Nullable{System.DateTimeOffset}[]">
            <summary>
            Converts an <see cref="T:Google.Datastore.V1.ArrayValue"/> to an array. Each value within <paramref name="arrayValue"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual explicit conversion. Any <see cref="T:Google.Datastore.V1.Value"/> elements with a kind of
            Null are converted to null values in the resulting array.
            </summary>
            <param name="arrayValue">The array value to convert.</param>
            <returns>An array with converted values, or <c>null</c> if <paramref name="arrayValue"/> is null.</returns>
            <exception cref="T:System.InvalidOperationException">An element in the array value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.ArrayValue.op_Explicit(Google.Datastore.V1.ArrayValue)~Google.Datastore.V1.Value[]">
            <summary>
            Converts an <see cref="T:Google.Datastore.V1.ArrayValue"/> to an array. Each value within <paramref name="arrayValue"/> is converted
            to a <see cref="T:Google.Datastore.V1.Value"/> using the individual explicit conversion. Any <see cref="T:Google.Datastore.V1.Value"/> elements with a kind of
            Null are converted to null values in the resulting array.
            </summary>
            <param name="arrayValue">The array value to convert.</param>
            <returns>An array with converted values, or <c>null</c> if <paramref name="arrayValue"/> is null.</returns>
        </member>
        <member name="F:Google.Datastore.V1.ArrayValue.ValuesFieldNumber">
            <summary>Field number for the "values" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.ArrayValue.Values">
            <summary>
             Values in the array.
             The order of this array may not be preserved if it contains a mix of
             indexed and unindexed values.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.AsyncLazyDatastoreQuery">
            <summary>
            A Datastore query which is executed lazily. Iterating over this object will provide a sequence
            of entities; alternatively, all the results can be fetched using <see cref="M:Google.Datastore.V1.AsyncLazyDatastoreQuery.GetAllResultsAsync"/>,
            or for diagnostic use cases the RPC responses can be viewed using <see cref="M:Google.Datastore.V1.AsyncLazyDatastoreQuery.AsResponses"/>.
            The lazy evaluation is important: if you iterate over the query multiple times, it will execute
            multiple times, potentially returning different results each time.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.AsyncLazyDatastoreQuery.#ctor(System.Collections.Generic.IAsyncEnumerable{Google.Datastore.V1.RunQueryResponse})">
            <summary>
            Constructs a new instance from the given sequence of responses. This constructor
            is only present to facilitate testing; application code will normally obtain instances
            of this class by calling <see cref="M:Google.Datastore.V1.DatastoreDb.RunQueryLazilyAsync(Google.Datastore.V1.Query,System.Nullable{Google.Datastore.V1.ReadOptions.Types.ReadConsistency},Google.Api.Gax.Grpc.CallSettings)"/>.
            </summary>
            <remarks>
            The sequence of responses will be returned directly from <see cref="M:Google.Datastore.V1.AsyncLazyDatastoreQuery.AsResponses"/>, and
            used to lazily construct the other sequences returned by this class. It should not
            contain any null references.
            </remarks>
            <param name="responses">The responses to return.</param>
        </member>
        <member name="M:Google.Datastore.V1.AsyncLazyDatastoreQuery.GetAllResultsAsync">
            <summary>
            Reads all the results from this query, until either the query-specified limit or end cursor
            is reached, or there is no more data to read. Note that all the entities are read into memory,
            so this method is not appropriate for use cases where a query could return a very large number
            of results. However, it is the simplest approach to use cases where the query is bounded, such
            as displaying a page of results at a time in a web application.
            </summary>
            <returns>A task representing the asynchronous operation. When completed, the result of the task
            is the complete set of query results.</returns>
        </member>
        <member name="M:Google.Datastore.V1.AsyncLazyDatastoreQuery.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Google.Datastore.V1.AsyncLazyDatastoreQuery.AsResponses">
            <summary>
            This method is for advanced use cases only, where more diagnostic information is required;
            most application code should merely iterate over the query results as <see cref="T:Google.Datastore.V1.Entity"/>
            values, or call <see cref="M:Google.Datastore.V1.AsyncLazyDatastoreQuery.GetAllResultsAsync"/>.
            The results of this query are returned as a sequence of <see cref="T:Google.Datastore.V1.RunQueryResponse"/> values
            exactly as returned by the Datastore API.
            </summary>
            <returns>A sequence of <see cref="T:Google.Datastore.V1.RunQueryResponse"/> values.</returns>
        </member>
        <member name="T:Google.Datastore.V1.DatastoreReflection">
            <summary>Holder for reflection information generated from google/datastore/v1/datastore.proto</summary>
        </member>
        <member name="P:Google.Datastore.V1.DatastoreReflection.Descriptor">
            <summary>File descriptor for google/datastore/v1/datastore.proto</summary>
        </member>
        <member name="T:Google.Datastore.V1.LookupRequest">
            <summary>
             The request for [Datastore.Lookup][google.datastore.v1.Datastore.Lookup].
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.LookupRequest.ProjectIdFieldNumber">
            <summary>Field number for the "project_id" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.LookupRequest.ProjectId">
            <summary>
             The ID of the project against which to make the request.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.LookupRequest.ReadOptionsFieldNumber">
            <summary>Field number for the "read_options" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.LookupRequest.ReadOptions">
            <summary>
             The options for this lookup request.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.LookupRequest.KeysFieldNumber">
            <summary>Field number for the "keys" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.LookupRequest.Keys">
            <summary>
             Keys of entities to look up.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.LookupResponse">
            <summary>
             The response for [Datastore.Lookup][google.datastore.v1.Datastore.Lookup].
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.LookupResponse.FoundFieldNumber">
            <summary>Field number for the "found" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.LookupResponse.Found">
            <summary>
             Entities found as `ResultType.FULL` entities. The order of results in this
             field is undefined and has no relation to the order of the keys in the
             input.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.LookupResponse.MissingFieldNumber">
            <summary>Field number for the "missing" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.LookupResponse.Missing">
            <summary>
             Entities not found as `ResultType.KEY_ONLY` entities. The order of results
             in this field is undefined and has no relation to the order of the keys
             in the input.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.LookupResponse.DeferredFieldNumber">
            <summary>Field number for the "deferred" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.LookupResponse.Deferred">
            <summary>
             A list of keys that were not looked up due to resource constraints. The
             order of results in this field is undefined and has no relation to the
             order of the keys in the input.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.RunQueryRequest">
            <summary>
             The request for [Datastore.RunQuery][google.datastore.v1.Datastore.RunQuery].
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.RunQueryRequest.ProjectIdFieldNumber">
            <summary>Field number for the "project_id" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.RunQueryRequest.ProjectId">
            <summary>
             The ID of the project against which to make the request.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.RunQueryRequest.PartitionIdFieldNumber">
            <summary>Field number for the "partition_id" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.RunQueryRequest.PartitionId">
            <summary>
             Entities are partitioned into subsets, identified by a partition ID.
             Queries are scoped to a single partition.
             This partition ID is normalized with the standard default context
             partition ID.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.RunQueryRequest.ReadOptionsFieldNumber">
            <summary>Field number for the "read_options" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.RunQueryRequest.ReadOptions">
            <summary>
             The options for this query.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.RunQueryRequest.QueryFieldNumber">
            <summary>Field number for the "query" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.RunQueryRequest.Query">
            <summary>
             The query to run.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.RunQueryRequest.GqlQueryFieldNumber">
            <summary>Field number for the "gql_query" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.RunQueryRequest.GqlQuery">
            <summary>
             The GQL query to run.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.RunQueryRequest.QueryTypeOneofCase">
            <summary>Enum of possible cases for the "query_type" oneof.</summary>
        </member>
        <member name="T:Google.Datastore.V1.RunQueryResponse">
            <summary>
             The response for [Datastore.RunQuery][google.datastore.v1.Datastore.RunQuery].
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.RunQueryResponse.BatchFieldNumber">
            <summary>Field number for the "batch" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.RunQueryResponse.Batch">
            <summary>
             A batch of query results (always present).
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.RunQueryResponse.QueryFieldNumber">
            <summary>Field number for the "query" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.RunQueryResponse.Query">
            <summary>
             The parsed form of the `GqlQuery` from the request, if it was set.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.BeginTransactionRequest">
            <summary>
             The request for [Datastore.BeginTransaction][google.datastore.v1.Datastore.BeginTransaction].
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.BeginTransactionRequest.ProjectIdFieldNumber">
            <summary>Field number for the "project_id" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.BeginTransactionRequest.ProjectId">
            <summary>
             The ID of the project against which to make the request.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.BeginTransactionResponse">
            <summary>
             The response for [Datastore.BeginTransaction][google.datastore.v1.Datastore.BeginTransaction].
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.BeginTransactionResponse.TransactionFieldNumber">
            <summary>Field number for the "transaction" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.BeginTransactionResponse.Transaction">
            <summary>
             The transaction identifier (always present).
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.RollbackRequest">
            <summary>
             The request for [Datastore.Rollback][google.datastore.v1.Datastore.Rollback].
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.RollbackRequest.ProjectIdFieldNumber">
            <summary>Field number for the "project_id" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.RollbackRequest.ProjectId">
            <summary>
             The ID of the project against which to make the request.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.RollbackRequest.TransactionFieldNumber">
            <summary>Field number for the "transaction" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.RollbackRequest.Transaction">
            <summary>
             The transaction identifier, returned by a call to
             [Datastore.BeginTransaction][google.datastore.v1.Datastore.BeginTransaction].
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.RollbackResponse">
            <summary>
             The response for [Datastore.Rollback][google.datastore.v1.Datastore.Rollback].
             (an empty message).
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.CommitRequest">
            <summary>
             The request for [Datastore.Commit][google.datastore.v1.Datastore.Commit].
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.CommitRequest.ProjectIdFieldNumber">
            <summary>Field number for the "project_id" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.CommitRequest.ProjectId">
            <summary>
             The ID of the project against which to make the request.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.CommitRequest.ModeFieldNumber">
            <summary>Field number for the "mode" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.CommitRequest.Mode">
            <summary>
             The type of commit to perform. Defaults to `TRANSACTIONAL`.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.CommitRequest.TransactionFieldNumber">
            <summary>Field number for the "transaction" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.CommitRequest.Transaction">
            <summary>
             The identifier of the transaction associated with the commit. A
             transaction identifier is returned by a call to
             [Datastore.BeginTransaction][google.datastore.v1.Datastore.BeginTransaction].
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.CommitRequest.MutationsFieldNumber">
            <summary>Field number for the "mutations" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.CommitRequest.Mutations">
             <summary>
              The mutations to perform.
            
              When mode is `TRANSACTIONAL`, mutations affecting a single entity are
              applied in order. The following sequences of mutations affecting a single
              entity are not permitted in a single `Commit` request:
            
              - `insert` followed by `insert`
              - `update` followed by `insert`
              - `upsert` followed by `insert`
              - `delete` followed by `update`
            
              When mode is `NON_TRANSACTIONAL`, no two mutations may affect a single
              entity.
             </summary>
        </member>
        <member name="T:Google.Datastore.V1.CommitRequest.TransactionSelectorOneofCase">
            <summary>Enum of possible cases for the "transaction_selector" oneof.</summary>
        </member>
        <member name="T:Google.Datastore.V1.CommitRequest.Types">
            <summary>Container for nested types declared in the CommitRequest message type.</summary>
        </member>
        <member name="T:Google.Datastore.V1.CommitRequest.Types.Mode">
            <summary>
             The modes available for commits.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.CommitRequest.Types.Mode.Unspecified">
            <summary>
             Unspecified. This value must not be used.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.CommitRequest.Types.Mode.Transactional">
            <summary>
             Transactional: The mutations are either all applied, or none are applied.
             Learn about transactions [here](https://cloud.google.com/datastore/docs/concepts/transactions).
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.CommitRequest.Types.Mode.NonTransactional">
            <summary>
             Non-transactional: The mutations may not apply as all or none.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.CommitResponse">
            <summary>
             The response for [Datastore.Commit][google.datastore.v1.Datastore.Commit].
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.CommitResponse.MutationResultsFieldNumber">
            <summary>Field number for the "mutation_results" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.CommitResponse.MutationResults">
            <summary>
             The result of performing the mutations.
             The i-th mutation result corresponds to the i-th mutation in the request.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.CommitResponse.IndexUpdatesFieldNumber">
            <summary>Field number for the "index_updates" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.CommitResponse.IndexUpdates">
            <summary>
             The number of index entries updated during the commit, or zero if none were
             updated.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.AllocateIdsRequest">
            <summary>
             The request for [Datastore.AllocateIds][google.datastore.v1.Datastore.AllocateIds].
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.AllocateIdsRequest.ProjectIdFieldNumber">
            <summary>Field number for the "project_id" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.AllocateIdsRequest.ProjectId">
            <summary>
             The ID of the project against which to make the request.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.AllocateIdsRequest.KeysFieldNumber">
            <summary>Field number for the "keys" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.AllocateIdsRequest.Keys">
            <summary>
             A list of keys with incomplete key paths for which to allocate IDs.
             No key may be reserved/read-only.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.AllocateIdsResponse">
            <summary>
             The response for [Datastore.AllocateIds][google.datastore.v1.Datastore.AllocateIds].
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.AllocateIdsResponse.KeysFieldNumber">
            <summary>Field number for the "keys" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.AllocateIdsResponse.Keys">
            <summary>
             The keys specified in the request (in the same order), each with
             its key path completed with a newly allocated ID.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.Mutation">
            <summary>
             A mutation to apply to an entity.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Mutation.InsertFieldNumber">
            <summary>Field number for the "insert" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Mutation.Insert">
            <summary>
             The entity to insert. The entity must not already exist.
             The entity key's final path element may be incomplete.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Mutation.UpdateFieldNumber">
            <summary>Field number for the "update" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Mutation.Update">
            <summary>
             The entity to update. The entity must already exist.
             Must have a complete key path.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Mutation.UpsertFieldNumber">
            <summary>Field number for the "upsert" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Mutation.Upsert">
            <summary>
             The entity to upsert. The entity may or may not already exist.
             The entity key's final path element may be incomplete.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Mutation.DeleteFieldNumber">
            <summary>Field number for the "delete" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Mutation.Delete">
            <summary>
             The key of the entity to delete. The entity may or may not already exist.
             Must have a complete key path and must not be reserved/read-only.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Mutation.BaseVersionFieldNumber">
            <summary>Field number for the "base_version" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Mutation.BaseVersion">
            <summary>
             The version of the entity that this mutation is being applied to. If this
             does not match the current version on the server, the mutation conflicts.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.Mutation.OperationOneofCase">
            <summary>Enum of possible cases for the "operation" oneof.</summary>
        </member>
        <member name="T:Google.Datastore.V1.Mutation.ConflictDetectionStrategyOneofCase">
            <summary>Enum of possible cases for the "conflict_detection_strategy" oneof.</summary>
        </member>
        <member name="T:Google.Datastore.V1.MutationResult">
            <summary>
             The result of applying a mutation.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.MutationResult.KeyFieldNumber">
            <summary>Field number for the "key" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.MutationResult.Key">
            <summary>
             The automatically allocated key.
             Set only when the mutation allocated a key.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.MutationResult.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.MutationResult.Version">
            <summary>
             The version of the entity on the server after processing the mutation. If
             the mutation doesn't change anything on the server, then the version will
             be the version of the current entity or, if no entity is present, a version
             that is strictly greater than the version of any previous entity and less
             than the version of any possible future entity.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.MutationResult.ConflictDetectedFieldNumber">
            <summary>Field number for the "conflict_detected" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.MutationResult.ConflictDetected">
            <summary>
             Whether a conflict was detected for this mutation. Always false when a
             conflict detection strategy field is not set in the mutation.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.ReadOptions">
            <summary>
             The options shared by read requests.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.ReadOptions.ReadConsistencyFieldNumber">
            <summary>Field number for the "read_consistency" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.ReadOptions.ReadConsistency">
            <summary>
             The non-transactional read consistency to use.
             Cannot be set to `STRONG` for global queries.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.ReadOptions.TransactionFieldNumber">
            <summary>Field number for the "transaction" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.ReadOptions.Transaction">
            <summary>
             The identifier of the transaction in which to read. A
             transaction identifier is returned by a call to
             [Datastore.BeginTransaction][google.datastore.v1.Datastore.BeginTransaction].
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.ReadOptions.ConsistencyTypeOneofCase">
            <summary>Enum of possible cases for the "consistency_type" oneof.</summary>
        </member>
        <member name="T:Google.Datastore.V1.ReadOptions.Types">
            <summary>Container for nested types declared in the ReadOptions message type.</summary>
        </member>
        <member name="T:Google.Datastore.V1.ReadOptions.Types.ReadConsistency">
            <summary>
             The possible values for read consistencies.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.ReadOptions.Types.ReadConsistency.Unspecified">
            <summary>
             Unspecified. This value must not be used.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.ReadOptions.Types.ReadConsistency.Strong">
            <summary>
             Strong consistency.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.ReadOptions.Types.ReadConsistency.Eventual">
            <summary>
             Eventual consistency.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.DatastoreSettings">
            <summary>
            Settings for a <see cref="T:Google.Datastore.V1.DatastoreClient"/>.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreSettings.GetDefault">
            <summary>
            Get a new instance of the default <see cref="T:Google.Datastore.V1.DatastoreSettings"/>.
            </summary>
            <returns>
            A new instance of the default <see cref="T:Google.Datastore.V1.DatastoreSettings"/>.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreSettings.#ctor">
            <summary>
            Constructs a new <see cref="T:Google.Datastore.V1.DatastoreSettings"/> object with default settings.
            </summary>
        </member>
        <member name="P:Google.Datastore.V1.DatastoreSettings.IdempotentRetryFilter">
            <summary>
            The filter specifying which RPC <see cref="T:Grpc.Core.StatusCode"/>s are eligible for retry
            for "Idempotent" <see cref="T:Google.Datastore.V1.DatastoreClient"/> RPC methods.
            </summary>
            <remarks>
            The eligible RPC <see cref="T:Grpc.Core.StatusCode"/>s for retry for "Idempotent" RPC methods are:
            <list type="bullet">
            <item><description><see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Datastore.V1.DatastoreSettings.NonIdempotentRetryFilter">
            <summary>
            The filter specifying which RPC <see cref="T:Grpc.Core.StatusCode"/>s are eligible for retry
            for "NonIdempotent" <see cref="T:Google.Datastore.V1.DatastoreClient"/> RPC methods.
            </summary>
            <remarks>
            There are no RPC <see cref="T:Grpc.Core.StatusCode"/>s eligible for retry for "NonIdempotent" RPC methods.
            </remarks>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreSettings.GetDefaultRetryBackoff">
            <summary>
            "Default" retry backoff for <see cref="T:Google.Datastore.V1.DatastoreClient"/> RPC methods.
            </summary>
            <returns>
            The "Default" retry backoff for <see cref="T:Google.Datastore.V1.DatastoreClient"/> RPC methods.
            </returns>
            <remarks>
            The "Default" retry backoff for <see cref="T:Google.Datastore.V1.DatastoreClient"/> RPC methods is defined as:
            <list type="bullet">
            <item><description>Initial delay: 100 milliseconds</description></item>
            <item><description>Maximum delay: 60000 milliseconds</description></item>
            <item><description>Delay multiplier: 1.3</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreSettings.GetDefaultTimeoutBackoff">
            <summary>
            "Default" timeout backoff for <see cref="T:Google.Datastore.V1.DatastoreClient"/> RPC methods.
            </summary>
            <returns>
            The "Default" timeout backoff for <see cref="T:Google.Datastore.V1.DatastoreClient"/> RPC methods.
            </returns>
            <remarks>
            The "Default" timeout backoff for <see cref="T:Google.Datastore.V1.DatastoreClient"/> RPC methods is defined as:
            <list type="bullet">
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Maximum timeout: 60000 milliseconds</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Google.Datastore.V1.DatastoreSettings.LookupSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>DatastoreClient.Lookup</c> and <c>DatastoreClient.LookupAsync</c>.
            </summary>
            <remarks>
            The default <c>DatastoreClient.Lookup</c> and
            <c>DatastoreClient.LookupAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Datastore.V1.DatastoreSettings.RunQuerySettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>DatastoreClient.RunQuery</c> and <c>DatastoreClient.RunQueryAsync</c>.
            </summary>
            <remarks>
            The default <c>DatastoreClient.RunQuery</c> and
            <c>DatastoreClient.RunQueryAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description><see cref="F:Grpc.Core.StatusCode.DeadlineExceeded"/></description></item>
            <item><description><see cref="F:Grpc.Core.StatusCode.Unavailable"/></description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Datastore.V1.DatastoreSettings.BeginTransactionSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>DatastoreClient.BeginTransaction</c> and <c>DatastoreClient.BeginTransactionAsync</c>.
            </summary>
            <remarks>
            The default <c>DatastoreClient.BeginTransaction</c> and
            <c>DatastoreClient.BeginTransactionAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description>No status codes</description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Datastore.V1.DatastoreSettings.CommitSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>DatastoreClient.Commit</c> and <c>DatastoreClient.CommitAsync</c>.
            </summary>
            <remarks>
            The default <c>DatastoreClient.Commit</c> and
            <c>DatastoreClient.CommitAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description>No status codes</description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Datastore.V1.DatastoreSettings.RollbackSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>DatastoreClient.Rollback</c> and <c>DatastoreClient.RollbackAsync</c>.
            </summary>
            <remarks>
            The default <c>DatastoreClient.Rollback</c> and
            <c>DatastoreClient.RollbackAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description>No status codes</description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="P:Google.Datastore.V1.DatastoreSettings.AllocateIdsSettings">
            <summary>
            <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> for synchronous and asynchronous calls to
            <c>DatastoreClient.AllocateIds</c> and <c>DatastoreClient.AllocateIdsAsync</c>.
            </summary>
            <remarks>
            The default <c>DatastoreClient.AllocateIds</c> and
            <c>DatastoreClient.AllocateIdsAsync</c> <see cref="T:Google.Api.Gax.Grpc.RetrySettings"/> are:
            <list type="bullet">
            <item><description>Initial retry delay: 100 milliseconds</description></item>
            <item><description>Retry delay multiplier: 1.3</description></item>
            <item><description>Retry maximum delay: 60000 milliseconds</description></item>
            <item><description>Initial timeout: 60000 milliseconds</description></item>
            <item><description>Timeout multiplier: 1.0</description></item>
            <item><description>Timeout maximum delay: 60000 milliseconds</description></item>
            </list>
            Retry will be attempted on the following response status codes:
            <list>
            <item><description>No status codes</description></item>
            </list>
            Default RPC expiration is 600000 milliseconds.
            </remarks>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreSettings.Clone">
            <summary>
            Creates a deep clone of this object, with all the same property values.
            </summary>
            <returns>A deep clone of this <see cref="T:Google.Datastore.V1.DatastoreSettings"/> object.</returns>
        </member>
        <member name="T:Google.Datastore.V1.DatastoreClient">
            <summary>
            Datastore client wrapper, for convenient use.
            </summary>
        </member>
        <member name="P:Google.Datastore.V1.DatastoreClient.DefaultEndpoint">
            <summary>
            The default endpoint for the Datastore service, which is a host of "datastore.googleapis.com" and a port of 443.
            </summary>
        </member>
        <member name="P:Google.Datastore.V1.DatastoreClient.DefaultScopes">
            <summary>
            The default Datastore scopes.
            </summary>
            <remarks>
            The default Datastore scopes are:
            <list type="bullet">
            <item><description>"https://www.googleapis.com/auth/cloud-platform"</description></item>
            <item><description>"https://www.googleapis.com/auth/datastore"</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.CreateAsync(Google.Api.Gax.Grpc.ServiceEndpoint,Google.Datastore.V1.DatastoreSettings)">
            <summary>
            Asynchronously creates a <see cref="T:Google.Datastore.V1.DatastoreClient"/>, applying defaults for all unspecified settings,
            and creating a channel connecting to the given endpoint with application default credentials where
            necessary.
            </summary>
            <param name="endpoint">Optional <see cref="T:Google.Api.Gax.Grpc.ServiceEndpoint"/>.</param>
            <param name="settings">Optional <see cref="T:Google.Datastore.V1.DatastoreSettings"/>.</param>
            <returns>The task representing the created <see cref="T:Google.Datastore.V1.DatastoreClient"/>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.Create(Google.Api.Gax.Grpc.ServiceEndpoint,Google.Datastore.V1.DatastoreSettings)">
            <summary>
            Synchronously creates a <see cref="T:Google.Datastore.V1.DatastoreClient"/>, applying defaults for all unspecified settings,
            and creating a channel connecting to the given endpoint with application default credentials where
            necessary.
            </summary>
            <param name="endpoint">Optional <see cref="T:Google.Api.Gax.Grpc.ServiceEndpoint"/>.</param>
            <param name="settings">Optional <see cref="T:Google.Datastore.V1.DatastoreSettings"/>.</param>
            <returns>The created <see cref="T:Google.Datastore.V1.DatastoreClient"/>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.Create(Grpc.Core.Channel,Google.Datastore.V1.DatastoreSettings)">
            <summary>
            Creates a <see cref="T:Google.Datastore.V1.DatastoreClient"/> which uses the specified channel for remote operations.
            </summary>
            <param name="channel">The <see cref="T:Grpc.Core.Channel"/> for remote operations. Must not be null.</param>
            <param name="settings">Optional <see cref="T:Google.Datastore.V1.DatastoreSettings"/>.</param>
            <returns>The created <see cref="T:Google.Datastore.V1.DatastoreClient"/>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.ShutdownDefaultChannelsAsync">
            <summary>
            Shuts down any channels automatically created by <see cref="M:Google.Datastore.V1.DatastoreClient.Create(Google.Api.Gax.Grpc.ServiceEndpoint,Google.Datastore.V1.DatastoreSettings)"/>
            and <see cref="M:Google.Datastore.V1.DatastoreClient.CreateAsync(Google.Api.Gax.Grpc.ServiceEndpoint,Google.Datastore.V1.DatastoreSettings)"/>. Channels which weren't automatically
            created are not affected.
            </summary>
            <remarks>After calling this method, further calls to <see cref="M:Google.Datastore.V1.DatastoreClient.Create(Google.Api.Gax.Grpc.ServiceEndpoint,Google.Datastore.V1.DatastoreSettings)"/>
            and <see cref="M:Google.Datastore.V1.DatastoreClient.CreateAsync(Google.Api.Gax.Grpc.ServiceEndpoint,Google.Datastore.V1.DatastoreSettings)"/> will create new channels, which could
            in turn be shut down by another call to this method.</remarks>
            <returns>A task representing the asynchronous shutdown operation.</returns>
        </member>
        <member name="P:Google.Datastore.V1.DatastoreClient.GrpcClient">
            <summary>
            The underlying gRPC Datastore client.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.LookupAsync(System.String,Google.Datastore.V1.ReadOptions,System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Looks up entities by key.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="readOptions">
            The options for this lookup request.
            </param>
            <param name="keys">
            Keys of entities to look up.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.LookupAsync(System.String,Google.Datastore.V1.ReadOptions,System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},System.Threading.CancellationToken)">
            <summary>
            Looks up entities by key.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="readOptions">
            The options for this lookup request.
            </param>
            <param name="keys">
            Keys of entities to look up.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.Lookup(System.String,Google.Datastore.V1.ReadOptions,System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Looks up entities by key.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="readOptions">
            The options for this lookup request.
            </param>
            <param name="keys">
            Keys of entities to look up.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.RunQueryAsync(System.String,Google.Datastore.V1.PartitionId,Google.Datastore.V1.ReadOptions,Google.Datastore.V1.Query,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Queries for entities.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="partitionId">
            Entities are partitioned into subsets, identified by a partition ID.
            Queries are scoped to a single partition.
            This partition ID is normalized with the standard default context
            partition ID.
            </param>
            <param name="readOptions">
            The options for this query.
            </param>
            <param name="query">
            The query to run.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.RunQueryAsync(System.String,Google.Datastore.V1.PartitionId,Google.Datastore.V1.ReadOptions,Google.Datastore.V1.Query,System.Threading.CancellationToken)">
            <summary>
            Queries for entities.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="partitionId">
            Entities are partitioned into subsets, identified by a partition ID.
            Queries are scoped to a single partition.
            This partition ID is normalized with the standard default context
            partition ID.
            </param>
            <param name="readOptions">
            The options for this query.
            </param>
            <param name="query">
            The query to run.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.RunQuery(System.String,Google.Datastore.V1.PartitionId,Google.Datastore.V1.ReadOptions,Google.Datastore.V1.Query,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Queries for entities.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="partitionId">
            Entities are partitioned into subsets, identified by a partition ID.
            Queries are scoped to a single partition.
            This partition ID is normalized with the standard default context
            partition ID.
            </param>
            <param name="readOptions">
            The options for this query.
            </param>
            <param name="query">
            The query to run.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.RunQueryAsync(System.String,Google.Datastore.V1.PartitionId,Google.Datastore.V1.ReadOptions,Google.Datastore.V1.GqlQuery,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Queries for entities.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="partitionId">
            Entities are partitioned into subsets, identified by a partition ID.
            Queries are scoped to a single partition.
            This partition ID is normalized with the standard default context
            partition ID.
            </param>
            <param name="readOptions">
            The options for this query.
            </param>
            <param name="gqlQuery">
            The GQL query to run.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.RunQueryAsync(System.String,Google.Datastore.V1.PartitionId,Google.Datastore.V1.ReadOptions,Google.Datastore.V1.GqlQuery,System.Threading.CancellationToken)">
            <summary>
            Queries for entities.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="partitionId">
            Entities are partitioned into subsets, identified by a partition ID.
            Queries are scoped to a single partition.
            This partition ID is normalized with the standard default context
            partition ID.
            </param>
            <param name="readOptions">
            The options for this query.
            </param>
            <param name="gqlQuery">
            The GQL query to run.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.RunQuery(System.String,Google.Datastore.V1.PartitionId,Google.Datastore.V1.ReadOptions,Google.Datastore.V1.GqlQuery,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Queries for entities.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="partitionId">
            Entities are partitioned into subsets, identified by a partition ID.
            Queries are scoped to a single partition.
            This partition ID is normalized with the standard default context
            partition ID.
            </param>
            <param name="readOptions">
            The options for this query.
            </param>
            <param name="gqlQuery">
            The GQL query to run.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.BeginTransactionAsync(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Begins a new transaction.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.BeginTransactionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Begins a new transaction.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.BeginTransaction(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Begins a new transaction.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.CommitAsync(System.String,Google.Datastore.V1.CommitRequest.Types.Mode,Google.Protobuf.ByteString,System.Collections.Generic.IEnumerable{Google.Datastore.V1.Mutation},Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Commits a transaction, optionally creating, deleting or modifying some
             entities.
             </summary>
             <param name="projectId">
             The ID of the project against which to make the request.
             </param>
             <param name="mode">
             The type of commit to perform. Defaults to `TRANSACTIONAL`.
             </param>
             <param name="transaction">
             The identifier of the transaction associated with the commit. A
             transaction identifier is returned by a call to
             [Datastore.BeginTransaction][google.datastore.v1.Datastore.BeginTransaction].
             </param>
             <param name="mutations">
             The mutations to perform.
            
             When mode is `TRANSACTIONAL`, mutations affecting a single entity are
             applied in order. The following sequences of mutations affecting a single
             entity are not permitted in a single `Commit` request:
            
             - `insert` followed by `insert`
             - `update` followed by `insert`
             - `upsert` followed by `insert`
             - `delete` followed by `update`
            
             When mode is `NON_TRANSACTIONAL`, no two mutations may affect a single
             entity.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.CommitAsync(System.String,Google.Datastore.V1.CommitRequest.Types.Mode,Google.Protobuf.ByteString,System.Collections.Generic.IEnumerable{Google.Datastore.V1.Mutation},System.Threading.CancellationToken)">
             <summary>
             Commits a transaction, optionally creating, deleting or modifying some
             entities.
             </summary>
             <param name="projectId">
             The ID of the project against which to make the request.
             </param>
             <param name="mode">
             The type of commit to perform. Defaults to `TRANSACTIONAL`.
             </param>
             <param name="transaction">
             The identifier of the transaction associated with the commit. A
             transaction identifier is returned by a call to
             [Datastore.BeginTransaction][google.datastore.v1.Datastore.BeginTransaction].
             </param>
             <param name="mutations">
             The mutations to perform.
            
             When mode is `TRANSACTIONAL`, mutations affecting a single entity are
             applied in order. The following sequences of mutations affecting a single
             entity are not permitted in a single `Commit` request:
            
             - `insert` followed by `insert`
             - `update` followed by `insert`
             - `upsert` followed by `insert`
             - `delete` followed by `update`
            
             When mode is `NON_TRANSACTIONAL`, no two mutations may affect a single
             entity.
             </param>
             <param name="cancellationToken">
             A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.Commit(System.String,Google.Datastore.V1.CommitRequest.Types.Mode,Google.Protobuf.ByteString,System.Collections.Generic.IEnumerable{Google.Datastore.V1.Mutation},Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Commits a transaction, optionally creating, deleting or modifying some
             entities.
             </summary>
             <param name="projectId">
             The ID of the project against which to make the request.
             </param>
             <param name="mode">
             The type of commit to perform. Defaults to `TRANSACTIONAL`.
             </param>
             <param name="transaction">
             The identifier of the transaction associated with the commit. A
             transaction identifier is returned by a call to
             [Datastore.BeginTransaction][google.datastore.v1.Datastore.BeginTransaction].
             </param>
             <param name="mutations">
             The mutations to perform.
            
             When mode is `TRANSACTIONAL`, mutations affecting a single entity are
             applied in order. The following sequences of mutations affecting a single
             entity are not permitted in a single `Commit` request:
            
             - `insert` followed by `insert`
             - `update` followed by `insert`
             - `upsert` followed by `insert`
             - `delete` followed by `update`
            
             When mode is `NON_TRANSACTIONAL`, no two mutations may affect a single
             entity.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.CommitAsync(System.String,Google.Datastore.V1.CommitRequest.Types.Mode,System.Collections.Generic.IEnumerable{Google.Datastore.V1.Mutation},Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Commits a transaction, optionally creating, deleting or modifying some
             entities.
             </summary>
             <param name="projectId">
             The ID of the project against which to make the request.
             </param>
             <param name="mode">
             The type of commit to perform. Defaults to `TRANSACTIONAL`.
             </param>
             <param name="mutations">
             The mutations to perform.
            
             When mode is `TRANSACTIONAL`, mutations affecting a single entity are
             applied in order. The following sequences of mutations affecting a single
             entity are not permitted in a single `Commit` request:
            
             - `insert` followed by `insert`
             - `update` followed by `insert`
             - `upsert` followed by `insert`
             - `delete` followed by `update`
            
             When mode is `NON_TRANSACTIONAL`, no two mutations may affect a single
             entity.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.CommitAsync(System.String,Google.Datastore.V1.CommitRequest.Types.Mode,System.Collections.Generic.IEnumerable{Google.Datastore.V1.Mutation},System.Threading.CancellationToken)">
             <summary>
             Commits a transaction, optionally creating, deleting or modifying some
             entities.
             </summary>
             <param name="projectId">
             The ID of the project against which to make the request.
             </param>
             <param name="mode">
             The type of commit to perform. Defaults to `TRANSACTIONAL`.
             </param>
             <param name="mutations">
             The mutations to perform.
            
             When mode is `TRANSACTIONAL`, mutations affecting a single entity are
             applied in order. The following sequences of mutations affecting a single
             entity are not permitted in a single `Commit` request:
            
             - `insert` followed by `insert`
             - `update` followed by `insert`
             - `upsert` followed by `insert`
             - `delete` followed by `update`
            
             When mode is `NON_TRANSACTIONAL`, no two mutations may affect a single
             entity.
             </param>
             <param name="cancellationToken">
             A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.Commit(System.String,Google.Datastore.V1.CommitRequest.Types.Mode,System.Collections.Generic.IEnumerable{Google.Datastore.V1.Mutation},Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Commits a transaction, optionally creating, deleting or modifying some
             entities.
             </summary>
             <param name="projectId">
             The ID of the project against which to make the request.
             </param>
             <param name="mode">
             The type of commit to perform. Defaults to `TRANSACTIONAL`.
             </param>
             <param name="mutations">
             The mutations to perform.
            
             When mode is `TRANSACTIONAL`, mutations affecting a single entity are
             applied in order. The following sequences of mutations affecting a single
             entity are not permitted in a single `Commit` request:
            
             - `insert` followed by `insert`
             - `update` followed by `insert`
             - `upsert` followed by `insert`
             - `delete` followed by `update`
            
             When mode is `NON_TRANSACTIONAL`, no two mutations may affect a single
             entity.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.RollbackAsync(System.String,Google.Protobuf.ByteString,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Rolls back a transaction.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="transaction">
            The transaction identifier, returned by a call to
            [Datastore.BeginTransaction][google.datastore.v1.Datastore.BeginTransaction].
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.RollbackAsync(System.String,Google.Protobuf.ByteString,System.Threading.CancellationToken)">
            <summary>
            Rolls back a transaction.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="transaction">
            The transaction identifier, returned by a call to
            [Datastore.BeginTransaction][google.datastore.v1.Datastore.BeginTransaction].
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.Rollback(System.String,Google.Protobuf.ByteString,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Rolls back a transaction.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="transaction">
            The transaction identifier, returned by a call to
            [Datastore.BeginTransaction][google.datastore.v1.Datastore.BeginTransaction].
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.AllocateIdsAsync(System.String,System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Allocates IDs for the given keys, which is useful for referencing an entity
            before it is inserted.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="keys">
            A list of keys with incomplete key paths for which to allocate IDs.
            No key may be reserved/read-only.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.AllocateIdsAsync(System.String,System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},System.Threading.CancellationToken)">
            <summary>
            Allocates IDs for the given keys, which is useful for referencing an entity
            before it is inserted.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="keys">
            A list of keys with incomplete key paths for which to allocate IDs.
            No key may be reserved/read-only.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to use for this RPC.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClient.AllocateIds(System.String,System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Allocates IDs for the given keys, which is useful for referencing an entity
            before it is inserted.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="keys">
            A list of keys with incomplete key paths for which to allocate IDs.
            No key may be reserved/read-only.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="T:Google.Datastore.V1.DatastoreClientImpl">
            <summary>
            Datastore client wrapper implementation, for convenient use.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClientImpl.#ctor(Google.Datastore.V1.Datastore.DatastoreClient,Google.Datastore.V1.DatastoreSettings)">
            <summary>
            Constructs a client wrapper for the Datastore service, with the specified gRPC client and settings.
            </summary>
            <param name="grpcClient">The underlying gRPC client.</param>
            <param name="settings">The base <see cref="T:Google.Datastore.V1.DatastoreSettings"/> used within this client </param>
        </member>
        <member name="P:Google.Datastore.V1.DatastoreClientImpl.GrpcClient">
            <summary>
            The underlying gRPC Datastore client.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClientImpl.LookupAsync(System.String,Google.Datastore.V1.ReadOptions,System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Looks up entities by key.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="readOptions">
            The options for this lookup request.
            </param>
            <param name="keys">
            Keys of entities to look up.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClientImpl.Lookup(System.String,Google.Datastore.V1.ReadOptions,System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Looks up entities by key.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="readOptions">
            The options for this lookup request.
            </param>
            <param name="keys">
            Keys of entities to look up.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClientImpl.RunQueryAsync(System.String,Google.Datastore.V1.PartitionId,Google.Datastore.V1.ReadOptions,Google.Datastore.V1.Query,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Queries for entities.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="partitionId">
            Entities are partitioned into subsets, identified by a partition ID.
            Queries are scoped to a single partition.
            This partition ID is normalized with the standard default context
            partition ID.
            </param>
            <param name="readOptions">
            The options for this query.
            </param>
            <param name="query">
            The query to run.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClientImpl.RunQuery(System.String,Google.Datastore.V1.PartitionId,Google.Datastore.V1.ReadOptions,Google.Datastore.V1.Query,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Queries for entities.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="partitionId">
            Entities are partitioned into subsets, identified by a partition ID.
            Queries are scoped to a single partition.
            This partition ID is normalized with the standard default context
            partition ID.
            </param>
            <param name="readOptions">
            The options for this query.
            </param>
            <param name="query">
            The query to run.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClientImpl.RunQueryAsync(System.String,Google.Datastore.V1.PartitionId,Google.Datastore.V1.ReadOptions,Google.Datastore.V1.GqlQuery,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Queries for entities.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="partitionId">
            Entities are partitioned into subsets, identified by a partition ID.
            Queries are scoped to a single partition.
            This partition ID is normalized with the standard default context
            partition ID.
            </param>
            <param name="readOptions">
            The options for this query.
            </param>
            <param name="gqlQuery">
            The GQL query to run.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClientImpl.RunQuery(System.String,Google.Datastore.V1.PartitionId,Google.Datastore.V1.ReadOptions,Google.Datastore.V1.GqlQuery,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Queries for entities.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="partitionId">
            Entities are partitioned into subsets, identified by a partition ID.
            Queries are scoped to a single partition.
            This partition ID is normalized with the standard default context
            partition ID.
            </param>
            <param name="readOptions">
            The options for this query.
            </param>
            <param name="gqlQuery">
            The GQL query to run.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClientImpl.BeginTransactionAsync(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Begins a new transaction.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClientImpl.BeginTransaction(System.String,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Begins a new transaction.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClientImpl.CommitAsync(System.String,Google.Datastore.V1.CommitRequest.Types.Mode,Google.Protobuf.ByteString,System.Collections.Generic.IEnumerable{Google.Datastore.V1.Mutation},Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Commits a transaction, optionally creating, deleting or modifying some
             entities.
             </summary>
             <param name="projectId">
             The ID of the project against which to make the request.
             </param>
             <param name="mode">
             The type of commit to perform. Defaults to `TRANSACTIONAL`.
             </param>
             <param name="transaction">
             The identifier of the transaction associated with the commit. A
             transaction identifier is returned by a call to
             [Datastore.BeginTransaction][google.datastore.v1.Datastore.BeginTransaction].
             </param>
             <param name="mutations">
             The mutations to perform.
            
             When mode is `TRANSACTIONAL`, mutations affecting a single entity are
             applied in order. The following sequences of mutations affecting a single
             entity are not permitted in a single `Commit` request:
            
             - `insert` followed by `insert`
             - `update` followed by `insert`
             - `upsert` followed by `insert`
             - `delete` followed by `update`
            
             When mode is `NON_TRANSACTIONAL`, no two mutations may affect a single
             entity.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClientImpl.Commit(System.String,Google.Datastore.V1.CommitRequest.Types.Mode,Google.Protobuf.ByteString,System.Collections.Generic.IEnumerable{Google.Datastore.V1.Mutation},Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Commits a transaction, optionally creating, deleting or modifying some
             entities.
             </summary>
             <param name="projectId">
             The ID of the project against which to make the request.
             </param>
             <param name="mode">
             The type of commit to perform. Defaults to `TRANSACTIONAL`.
             </param>
             <param name="transaction">
             The identifier of the transaction associated with the commit. A
             transaction identifier is returned by a call to
             [Datastore.BeginTransaction][google.datastore.v1.Datastore.BeginTransaction].
             </param>
             <param name="mutations">
             The mutations to perform.
            
             When mode is `TRANSACTIONAL`, mutations affecting a single entity are
             applied in order. The following sequences of mutations affecting a single
             entity are not permitted in a single `Commit` request:
            
             - `insert` followed by `insert`
             - `update` followed by `insert`
             - `upsert` followed by `insert`
             - `delete` followed by `update`
            
             When mode is `NON_TRANSACTIONAL`, no two mutations may affect a single
             entity.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClientImpl.CommitAsync(System.String,Google.Datastore.V1.CommitRequest.Types.Mode,System.Collections.Generic.IEnumerable{Google.Datastore.V1.Mutation},Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Commits a transaction, optionally creating, deleting or modifying some
             entities.
             </summary>
             <param name="projectId">
             The ID of the project against which to make the request.
             </param>
             <param name="mode">
             The type of commit to perform. Defaults to `TRANSACTIONAL`.
             </param>
             <param name="mutations">
             The mutations to perform.
            
             When mode is `TRANSACTIONAL`, mutations affecting a single entity are
             applied in order. The following sequences of mutations affecting a single
             entity are not permitted in a single `Commit` request:
            
             - `insert` followed by `insert`
             - `update` followed by `insert`
             - `upsert` followed by `insert`
             - `delete` followed by `update`
            
             When mode is `NON_TRANSACTIONAL`, no two mutations may affect a single
             entity.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             A Task containing the RPC response.
             </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClientImpl.Commit(System.String,Google.Datastore.V1.CommitRequest.Types.Mode,System.Collections.Generic.IEnumerable{Google.Datastore.V1.Mutation},Google.Api.Gax.Grpc.CallSettings)">
             <summary>
             Commits a transaction, optionally creating, deleting or modifying some
             entities.
             </summary>
             <param name="projectId">
             The ID of the project against which to make the request.
             </param>
             <param name="mode">
             The type of commit to perform. Defaults to `TRANSACTIONAL`.
             </param>
             <param name="mutations">
             The mutations to perform.
            
             When mode is `TRANSACTIONAL`, mutations affecting a single entity are
             applied in order. The following sequences of mutations affecting a single
             entity are not permitted in a single `Commit` request:
            
             - `insert` followed by `insert`
             - `update` followed by `insert`
             - `upsert` followed by `insert`
             - `delete` followed by `update`
            
             When mode is `NON_TRANSACTIONAL`, no two mutations may affect a single
             entity.
             </param>
             <param name="callSettings">
             If not null, applies overrides to this RPC call.
             </param>
             <returns>
             The RPC response.
             </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClientImpl.RollbackAsync(System.String,Google.Protobuf.ByteString,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Rolls back a transaction.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="transaction">
            The transaction identifier, returned by a call to
            [Datastore.BeginTransaction][google.datastore.v1.Datastore.BeginTransaction].
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClientImpl.Rollback(System.String,Google.Protobuf.ByteString,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Rolls back a transaction.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="transaction">
            The transaction identifier, returned by a call to
            [Datastore.BeginTransaction][google.datastore.v1.Datastore.BeginTransaction].
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClientImpl.AllocateIdsAsync(System.String,System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Allocates IDs for the given keys, which is useful for referencing an entity
            before it is inserted.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="keys">
            A list of keys with incomplete key paths for which to allocate IDs.
            No key may be reserved/read-only.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            A Task containing the RPC response.
            </returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreClientImpl.AllocateIds(System.String,System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Allocates IDs for the given keys, which is useful for referencing an entity
            before it is inserted.
            </summary>
            <param name="projectId">
            The ID of the project against which to make the request.
            </param>
            <param name="keys">
            A list of keys with incomplete key paths for which to allocate IDs.
            No key may be reserved/read-only.
            </param>
            <param name="callSettings">
            If not null, applies overrides to this RPC call.
            </param>
            <returns>
            The RPC response.
            </returns>
        </member>
        <member name="T:Google.Datastore.V1.DatastoreConstants">
            <summary>
            Constants for use in Datastore.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.DatastoreConstants.KeyProperty">
            <summary>
            The property to use in a query to obtain just the entity key.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.DatastoreConstants.NamespaceKind">
            <summary>
            The kind used to find all the namespaces used in your application entities.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.DatastoreConstants.KindKind">
            <summary>
            The kind used to query a specific kind.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.DatastoreConstants.PropertyKind">
            <summary>
            The kind used to query the properties used in entities.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.DatastoreDb">
            <summary>
            An abstraction over <see cref="T:Google.Datastore.V1.DatastoreClient"/> to simplify operations. Use the <see cref="M:Google.Datastore.V1.DatastoreDb.Create(System.String,System.String,Google.Datastore.V1.DatastoreClient)"/>
            method to obtain an instance of this class.
            </summary>
            <remarks>
            <para>
            The project ID specified on creation is used for all operations, effectively supplying the first parameter of every
            operation specified on <see cref="T:Google.Datastore.V1.DatastoreClient"/>.
            </para>
            <para>
            The project ID and namespace ID are combined to form a partition ID. This partition ID is used when creating a key
            factory or running a query. Operations that take keys or entities do not validate that the keys are within the
            partition associated with this object.
            </para>
            <para>
            This abstract class is provided to enable testability while permitting
            additional operations to be added in the future. See <see cref="M:Google.Datastore.V1.DatastoreDb.Create(System.String,System.String,Google.Datastore.V1.DatastoreClient)"/>
            to construct instances; alternatively, you can construct a <see cref="T:Google.Datastore.V1.DatastoreClient"/> directly.
            </para>
            </remarks>
        </member>
        <member name="P:Google.Datastore.V1.DatastoreDb.Client">
            <summary>
            The <see cref="T:Google.Datastore.V1.DatastoreClient"/> used for all remote operations.
            </summary>
        </member>
        <member name="P:Google.Datastore.V1.DatastoreDb.ProjectId">
            <summary>
            The ID of the project this instance operates on.
            </summary>
        </member>
        <member name="P:Google.Datastore.V1.DatastoreDb.NamespaceId">
            <summary>
            The ID of the namespace this instance operates on.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.Create(System.String,System.String,Google.Datastore.V1.DatastoreClient)">
            <summary>
            Creates a <see cref="T:Google.Datastore.V1.DatastoreDb"/> to operate on the partition identified by <paramref name="projectId"/>
            and <paramref name="namespaceId"/>, using the <paramref name="client"/> to perform remote operations.
            </summary>
            <param name="projectId">The project ID to use in all operations.</param>
            <param name="namespaceId">The namespace ID to use in operations requiring a partition.</param>
            <param name="client">The client to use for remote operations. If this is null, an instance will be created
            using default settings.</param>
            <returns>A <see cref="T:Google.Datastore.V1.DatastoreDb"/> operating on the specified partition.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.CreateKeyFactory(System.String)">
            <summary>
            Creates a key factory for root entities in this objects's partition.
            </summary>
            <param name="kind">The kind of entity key to create. Must not be null.</param>
            <returns>A key factory with the specified kind and this object's partition.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.RunQuery(Google.Datastore.V1.Query,System.Nullable{Google.Datastore.V1.ReadOptions.Types.ReadConsistency},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Runs the given query eagerly, retrieving all results in memory and indicating whether more
            results may be available beyond the query's limit. Use this method when your query has a limited
            number of results, for example to build a web application which fetches results in pages.
            </summary>
            <param name="query">The query to execute. Must not be null.</param>
            <param name="readConsistency">If not null, overrides the read consistency of the query.</param>
            <param name="callSettings">If not null, applies overrides to RPC calls.</param>
            <returns>The complete query results.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.RunQueryAsync(Google.Datastore.V1.Query,System.Nullable{Google.Datastore.V1.ReadOptions.Types.ReadConsistency},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Runs the given query eagerly and asynchronously, retrieving all results in memory and indicating whether more
            results may be available beyond the query's limit. Use this method when your query has a limited
            number of results, for example to build a web application which fetches results in pages.
            </summary>
            <param name="query">The query to execute. Must not be null.</param>
            <param name="readConsistency">If not null, overrides the read consistency of the query.</param>
            <param name="callSettings">If not null, applies overrides to RPC calls.</param>
            <returns>A task representing the asynchronous operation. The result of the task is the complete set of query results.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.RunQueryLazily(Google.Datastore.V1.Query,System.Nullable{Google.Datastore.V1.ReadOptions.Types.ReadConsistency},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lazily executes the given structured query.
            </summary>
            <remarks>
            The results are requested lazily: no API calls will be made until the application starts
            iterating over the results. Iterating over the same <see cref="T:Google.Datastore.V1.LazyDatastoreQuery"/> object
            multiple times will execute the query again, potentially returning different results.
            </remarks>
            <param name="query">The query to execute. Must not be null.</param>
            <param name="readConsistency">If not null, overrides the read consistency of the query.</param>
            <param name="callSettings">If not null, applies overrides to RPC calls.</param>
            <returns>A <see cref="T:Google.Datastore.V1.LazyDatastoreQuery"/> representing the lazy query results.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.RunQueryLazilyAsync(Google.Datastore.V1.Query,System.Nullable{Google.Datastore.V1.ReadOptions.Types.ReadConsistency},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lazily executes the given structured query for asynchronous consumption.
            </summary>
            <remarks>
            The results are requested lazily: no API calls will be made until the application starts
            iterating over the results. Iterating over the same <see cref="T:Google.Datastore.V1.LazyDatastoreQuery"/> object
            multiple times will execute the query again, potentially returning different results.
            </remarks>
            <param name="query">The query to execute. Must not be null.</param>
            <param name="readConsistency">If not null, overrides the read consistency of the query.</param>
            <param name="callSettings">If not null, applies overrides to RPC calls.</param>
            <returns>An <see cref="T:Google.Datastore.V1.AsyncLazyDatastoreQuery"/> representing the lazy query results.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.RunQuery(Google.Datastore.V1.GqlQuery,System.Nullable{Google.Datastore.V1.ReadOptions.Types.ReadConsistency},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Runs the given query eagerly, retrieving all results in memory and indicating whether more
            results may be available beyond the query's limit. Use this method when your query has a limited
            number of results, for example to build a web application which fetches results in pages.
            </summary>
            <param name="query">The query to execute. Must not be null.</param>
            <param name="readConsistency">If not null, overrides the read consistency of the query.</param>
            <param name="callSettings">If not null, applies overrides to RPC calls.</param>
            <returns>The complete query results.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.RunQueryAsync(Google.Datastore.V1.GqlQuery,System.Nullable{Google.Datastore.V1.ReadOptions.Types.ReadConsistency},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Runs the given query eagerly and asynchronously, retrieving all results in memory and indicating whether more
            results may be available beyond the query's limit. Use this method when your query has a limited
            number of results, for example to build a web application which fetches results in pages.
            </summary>
            <param name="query">The query to execute. Must not be null.</param>
            <param name="readConsistency">If not null, overrides the read consistency of the query.</param>
            <param name="callSettings">If not null, applies overrides to RPC calls.</param>
            <returns>A task representing the asynchronous operation. The result of the task is the complete set of query results.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.RunQueryLazily(Google.Datastore.V1.GqlQuery,System.Nullable{Google.Datastore.V1.ReadOptions.Types.ReadConsistency},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lazily executes the given GQL query for asynchronous consumption.
            </summary>
            <remarks>
            The results are requested lazily: no API calls will be made until the application starts
            iterating over the results. Iterating over the same <see cref="T:Google.Datastore.V1.LazyDatastoreQuery"/> object
            multiple times will execute the query again, potentially returning different results.
            </remarks>
            <param name="gqlQuery">The query to execute. Must not be null.</param>
            <param name="readConsistency">If not null, overrides the read consistency of the query.</param>
            <param name="callSettings">If not null, applies overrides to RPC calls.</param>
            <returns>A <see cref="T:Google.Datastore.V1.LazyDatastoreQuery"/> representing the lazy query results.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.RunQueryLazilyAsync(Google.Datastore.V1.GqlQuery,System.Nullable{Google.Datastore.V1.ReadOptions.Types.ReadConsistency},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lazily executes the given GQL query for asynchronous consumption.
            </summary>
            <remarks>
            The results are requested lazily: no API calls will be made until the application starts
            iterating over the results. Iterating over the same <see cref="T:Google.Datastore.V1.LazyDatastoreQuery"/> object
            multiple times will execute the query again, potentially returning different results.
            </remarks>
            <param name="gqlQuery">The query to execute. Must not be null.</param>
            <param name="readConsistency">If not null, overrides the read consistency of the query.</param>
            <param name="callSettings">If not null, applies overrides to RPC calls.</param>
            <returns>An <see cref="T:Google.Datastore.V1.AsyncLazyDatastoreQuery"/> representing the lazy query results.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.BeginTransaction(Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Begins a transaction, returning a <see cref="T:Google.Datastore.V1.DatastoreTransaction"/> which can be used to operate on the transaction.
            </summary>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A new <see cref="T:Google.Datastore.V1.DatastoreTransaction"/> for this object's project.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.BeginTransactionAsync(Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Begins a transaction asynchronously, returning a <see cref="T:Google.Datastore.V1.DatastoreTransaction"/> which can be used to operate on the transaction.
            </summary>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A new <see cref="T:Google.Datastore.V1.DatastoreTransaction"/> for this object's project.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.AllocateId(Google.Datastore.V1.Key,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Allocates an ID for a single incomplete key.
            </summary>
            <remarks>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.AllocateIds(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)"/>.</remarks>
            <param name="key">The incomplete key to allocate an ID for.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The complete key.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.AllocateIds(Google.Datastore.V1.Key[])">
            <summary>
            Allocates IDs for a collection of incomplete keys.
            </summary>
            <remarks>
            <para>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.AllocateIds(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)"/>.</para>
            <para>
            Call settings are not supported on this call due to restrictions with methods containing a parameter array and optional parameters.
            To specify options, create a collection or array explicitly, and call <see cref="M:Google.Datastore.V1.DatastoreDb.AllocateIds(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)"/>.
            </para>
            </remarks>
            <param name="keys">The incomplete keys. Must not be null or contain null elements.</param>
            <returns>A collection of complete keys with allocated IDs, in the same order as <paramref name="keys"/>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.AllocateIds(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Allocates IDs for a collection of incomplete keys.
            </summary>
            <param name="keys">The incomplete keys. Must not be null or contain null elements.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A collection of complete keys with allocated IDs, in the same order as <paramref name="keys"/>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.AllocateIdAsync(Google.Datastore.V1.Key,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Allocates an ID for a single incomplete key asynchronously.
            </summary>
            <remarks>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.AllocateIdsAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)"/>.</remarks>
            <param name="key">The incomplete key to allocate an ID for.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The complete key.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.AllocateIdsAsync(Google.Datastore.V1.Key[])">
            <summary>
            Allocates IDs for a collection of incomplete keys asynchronously.
            </summary>
            <remarks>
            <para>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.AllocateIdsAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)"/>.</para>
            <para>
            Call settings are not supported on this call due to restrictions with methods containing a parameter array and optional parameters.
            To specify options, create a collection or array explicitly, and call <see cref="M:Google.Datastore.V1.DatastoreDb.AllocateIdsAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)"/>.
            </para>
            </remarks>
            <param name="keys">The incomplete keys. Must not be null or contain null elements.</param>
            <returns>A collection of complete keys with allocated IDs, in the same order as <paramref name="keys"/>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.AllocateIdsAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Allocates IDs for a collection of incomplete keys asynchronously.
            </summary>
            <param name="keys">The incomplete keys. Must not be null or contain null elements.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A collection of complete keys with allocated IDs, in the same order as <paramref name="keys"/>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.Lookup(Google.Datastore.V1.Key,System.Nullable{Google.Datastore.V1.ReadOptions.Types.ReadConsistency},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Looks up a single entity by key.
            </summary>
            <remarks>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.Lookup(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},System.Nullable{Google.Datastore.V1.ReadOptions.Types.ReadConsistency},Google.Api.Gax.Grpc.CallSettings)"/>.</remarks>
            <param name="key">The key to look up. Must not be null, and must be complete.</param>
            <param name="readConsistency">The desired read consistency of the lookup, or null to use the default.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The entity with the specified key, or <c>null</c> if no such entity exists.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.Lookup(Google.Datastore.V1.Key[])">
            <summary>
            Looks up a collection of entities by key.
            </summary>
            <remarks>
            <para>
            This call may perform multiple RPC operations in order to look up all keys.
            </para>
            <para>
            This overload does not support the <see cref="T:Google.Datastore.V1.ReadOptions.Types.ReadConsistency"/> or <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> to be specified due to restrictions with
            methods containing a parameter array and optional parameters.
            It simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.Lookup(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},System.Nullable{Google.Datastore.V1.ReadOptions.Types.ReadConsistency},Google.Api.Gax.Grpc.CallSettings)"/>, passing in a <c>null</c>
            value for the read consistency and call settings.
            </para>
            </remarks>
            <param name="keys">The keys to look up. Must not be null, and every element must be non-null and refer to a complete key.</param>
            <returns>A collection of entities with the same size as <paramref name="keys"/>, containing corresponding entity
            references, or <c>null</c> where the key was not found.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.Lookup(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},System.Nullable{Google.Datastore.V1.ReadOptions.Types.ReadConsistency},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Looks up a collection of entities by key.
            </summary>
            <remarks>
            This call may perform multiple RPC operations in order to look up all keys.
            </remarks>
            <param name="keys">The keys to look up. Must not be null, and every element must be non-null and refer to a complete key.</param>
            <param name="readConsistency">The desired read consistency of the lookup, or null to use the default.</param>
            <param name="callSettings">If not null, applies overrides to RPC calls.</param>
            <returns>A collection of entities with the same size as <paramref name="keys"/>, containing corresponding entity
            references, or <c>null</c> where the key was not found.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.LookupAsync(Google.Datastore.V1.Key,System.Nullable{Google.Datastore.V1.ReadOptions.Types.ReadConsistency},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Looks up a single entity by key asynchronously.
            </summary>
            <remarks>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.LookupAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},System.Nullable{Google.Datastore.V1.ReadOptions.Types.ReadConsistency},Google.Api.Gax.Grpc.CallSettings)"/>.</remarks>
            <param name="key">The key to look up. Must not be null, and must be complete.</param>
            <param name="readConsistency">The desired read consistency of the lookup, or null to use the default.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The entity with the specified key, or <c>null</c> if no such entity exists.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.LookupAsync(Google.Datastore.V1.Key[])">
            <summary>
            Looks up a collection of entities by key asynchronously.
            </summary>
            <remarks>
            <para>
            This call may perform multiple RPC operations in order to look up all keys.
            </para>
            <para>
            This overload does not support the <see cref="T:Google.Datastore.V1.ReadOptions.Types.ReadConsistency"/> or <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> to be specified due to restrictions with
            methods containing a parameter array and optional parameters.
            It simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.LookupAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},System.Nullable{Google.Datastore.V1.ReadOptions.Types.ReadConsistency},Google.Api.Gax.Grpc.CallSettings)"/>, passing in a <c>null</c>
            value for the read consistency and call settings.
            </para>
            </remarks>
            <param name="keys">The keys to look up. Must not be null, and every element must be non-null and refer to a complete key.</param>
            <returns>A collection of entities with the same size as <paramref name="keys"/>, containing corresponding entity
            references, or <c>null</c> where the key was not found.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.LookupAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},System.Nullable{Google.Datastore.V1.ReadOptions.Types.ReadConsistency},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Looks up a collection of entities by key asynchronously.
            </summary>
            <remarks>
            This call may perform multiple RPC operations in order to look up all keys.
            </remarks>
            <param name="keys">The keys to look up. Must not be null, and every element must be non-null and refer to a complete key.</param>
            <param name="readConsistency">The desired read consistency of the lookup, or null to use the default.</param>
            <param name="callSettings">If not null, applies overrides to RPC calls.</param>
            <returns>A collection of entities with the same size as <paramref name="keys"/>, containing corresponding entity
            references, or <c>null</c> where the key was not found.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.Insert(Google.Datastore.V1.Entity,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Inserts a single entity, non-transactionally.
            </summary>
            <remarks>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.Insert(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)"/>.</remarks>
            <param name="entity">The entity to insert. Must not be null.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The key of the inserted entity if it was allocated by the server, or
            <c>null</c> if the inserted entity had a predefined key.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.Insert(Google.Datastore.V1.Entity[])">
            <summary>
            Inserts a collection of entities, non-transactionally.
            </summary>
            <remarks>
            <para>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.Insert(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)"/>.</para>
            <para>
            Call settings are not supported on this call due to restrictions with methods containing a parameter array and optional parameters.
            To specify options, create a collection or array explicitly, and call <see cref="M:Google.Datastore.V1.DatastoreDb.Insert(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)"/>.
            </para>
            </remarks>
            <param name="entities">The entities to insert. Must not be null or contain null entries.</param>
            <returns>A collection of keys of inserted entities, in the same order as <paramref name="entities"/>.
            Only keys allocated by the server will be returned; any entity with a predefined key will have a null value in
            the collection.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.Insert(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Inserts a collection of entities, non-transactionally.
            </summary>
            <param name="entities">The entities to insert. Must not be null or contain null entries.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A collection of keys of inserted entities, in the same order as <paramref name="entities"/>.
            Only keys allocated by the server will be returned; any entity with a predefined key will have a null value in
            the collection.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.InsertAsync(Google.Datastore.V1.Entity,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Inserts a single entity, non-transactionally and asynchronously.
            </summary>
            <remarks>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.InsertAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)"/>.</remarks>
            <param name="entity">The entity to insert. Must not be null.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A task representing the asynchronous operation. The result of the task is the key of the inserted entity
            if it was allocated by the server, or <c>null</c> if the inserted entity had a predefined key.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.InsertAsync(Google.Datastore.V1.Entity[])">
            <summary>
            Inserts a collection of entities, non-transactionally and asynchronously.
            </summary>
            <remarks>
            <para>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.InsertAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)"/>.</para>
            <para>
            Call settings are not supported on this call due to restrictions with methods containing a parameter array and optional parameters.
            To specify options, create a collection or array explicitly, and call <see cref="M:Google.Datastore.V1.DatastoreDb.InsertAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)"/>.
            </para>
            </remarks>
            <param name="entities">The entities to insert. Must not be null or contain null entries.</param>
            <returns>A task representing the asynchronous operation. The result of the task is
            a collection of keys of inserted entities, in the same order as <paramref name="entities"/>.
            Only keys allocated by the server will be returned; any entity with a predefined key will have a null value in
            the collection.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.InsertAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Inserts a collection of entities, non-transactionally and asynchronously.
            </summary>
            <param name="entities">The entities to insert. Must not be null or contain null entries.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A task representing the asynchronous operation. The result of the task is
            a collection of keys of inserted entities, in the same order as <paramref name="entities"/>.
            Only keys allocated by the server will be returned; any entity with a predefined key will have a null value in
            the collection.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.Upsert(Google.Datastore.V1.Entity,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Upserts a single entity, non-transactionally.
            </summary>
            <remarks>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.Upsert(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)"/>.</remarks>
            <param name="entity">The entity to upsert. Must not be null.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns><c>null</c> if the entity was updated or was inserted with a predefined key, or the new key if the entity was inserted
            and the mutation allocated the key.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.Upsert(Google.Datastore.V1.Entity[])">
            <summary>
            Upserts a collection of entities, non-transactionally.
            </summary>
            <remarks>
            <para>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.Upsert(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)"/>.</para>
            <para>
            Call settings are not supported on this call due to restrictions with methods containing a parameter array and optional parameters.
            To specify options, create a collection or array explicitly, and call <see cref="M:Google.Datastore.V1.DatastoreDb.Upsert(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)"/>.
            </para>
            </remarks>
            <param name="entities">The entities to upsert. Must not be null or contain null entries.</param>
            <returns>A collection of allocated keys, in the same order as <paramref name="entities"/>. Each inserted entity
            which had an incomplete key - requiring the server to allocate a new key - will have a non-null
            value in the collection, equal to the new key for the entity. Each updated entity or inserted entity
            with a predefined key will have a null value in the collection.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.Upsert(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Upserts a collection of entities, non-transactionally.
            </summary>
            <param name="entities">The entities to upsert. Must not be null or contain null entries.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A collection of allocated keys, in the same order as <paramref name="entities"/>. Each inserted entity
            which had an incomplete key - requiring the server to allocate a new key - will have a non-null
            value in the collection, equal to the new key for the entity. Each updated entity or inserted entity
            with a predefined key will have a null value in the collection.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.UpsertAsync(Google.Datastore.V1.Entity,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Upserts a single entity, non-transactionally and asynchronously.
            </summary>
            <remarks>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.UpsertAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)"/>.</remarks>
            <param name="entity">The entity to upsert. Must not be null.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A task representing the asynchronous operation. The result of the task is
            <c>null</c> if the entity was updated or was inserted with a predefined key, or the
            new key if the entity was inserted and the mutation allocated the key.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.UpsertAsync(Google.Datastore.V1.Entity[])">
            <summary>
            Upserts a collection of entities, non-transactionally and asynchronously.
            </summary>
            <remarks>
            <para>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.UpsertAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)"/>.</para>
            <para>
            Call settings are not supported on this call due to restrictions with methods containing a parameter array and optional parameters.
            To specify options, create a collection or array explicitly, and call <see cref="M:Google.Datastore.V1.DatastoreDb.UpsertAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)"/>.
            </para>
            </remarks>
            <param name="entities">The entities to upsert. Must not be null or contain null entries.</param>
            <returns>A task representing the asynchronous operation. The result of the task is
            a collection of allocated keys, in the same order as <paramref name="entities"/>. Each inserted entity
            which had an incomplete key - requiring the server to allocate a new key - will have a non-null
            value in the collection, equal to the new key for the entity. Each updated entity or inserted entity
            with a predefined key will have a null value in the collection.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.UpsertAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Upserts a collection of entities, non-transactionally and asynchronously.
            </summary>
            <param name="entities">The entities to upsert. Must not be null or contain null entries.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A task representing the asynchronous operation. The result of the task is
            a collection of allocated keys, in the same order as <paramref name="entities"/>. Each inserted entity
            which had an incomplete key - requiring the server to allocate a new key - will have a non-null
            value in the collection, equal to the new key for the entity. Each updated entity or inserted entity
            with a predefined key will have a null value in the collection.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.Update(Google.Datastore.V1.Entity,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates a single entity, non-transactionally.
            </summary>
            <remarks>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.Update(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)"/>.</remarks>
            <param name="entity">The entity to update. Must not be null.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.Update(Google.Datastore.V1.Entity[])">
            <summary>
            Updates a collection of entities, non-transactionally.
            </summary>
            <remarks>
            <para>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.Update(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)"/>.</para>
            <para>
            Call settings are not supported on this call due to restrictions with methods containing a parameter array and optional parameters.
            To specify options, create a collection or array explicitly, and call <see cref="M:Google.Datastore.V1.DatastoreDb.Update(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)"/>.
            </para>
            </remarks>
            <param name="entities">The entities to update. Must not be null or contain null entries.</param>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.Update(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates a collection of entities, non-transactionally.
            </summary>
            <param name="entities">The entities to update. Must not be null or contain null entries.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.UpdateAsync(Google.Datastore.V1.Entity,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates a single entity, non-transactionally and asynchronously.
            </summary>
            <remarks>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.UpdateAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)"/>.</remarks>
            <param name="entity">The entity to update. Must not be null.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.UpdateAsync(Google.Datastore.V1.Entity[])">
            <summary>
            Updates a collection of entities, non-transactionally and asynchronously.
            </summary>
            <remarks>
            <para>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.UpdateAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)"/>.</para>
            <para>
            Call settings are not supported on this call due to restrictions with methods containing a parameter array and optional parameters.
            To specify options, create a collection or array explicitly, and call <see cref="M:Google.Datastore.V1.DatastoreDb.UpdateAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)"/>.
            </para>
            </remarks>
            <param name="entities">The entities to update. Must not be null or contain null entries.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.UpdateAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Updates a collection of entities, non-transactionally and asynchronously.
            </summary>
            <param name="entities">The entities to update. Must not be null or contain null entries.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.Delete(Google.Datastore.V1.Entity,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes a single entity, non-transactionally.
            </summary>
            <remarks>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.Delete(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)"/>.</remarks>
            <param name="entity">The entity to delete. Must not be null.</param>
            <param name="callSettings">If not null, applies overrides to RPC calls.</param>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.Delete(Google.Datastore.V1.Entity[])">
            <summary>
            Deletes a collection of entities, non-transactionally.
            </summary>
            <remarks>
            <para>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.Delete(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)"/>.</para>
            <para>
            Call settings are not supported on this call due to restrictions with methods containing a parameter array and optional parameters.
            To specify options, create a collection or array explicitly, and call <see cref="M:Google.Datastore.V1.DatastoreDb.Delete(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)"/>.
            </para>
            </remarks>
            <param name="entities">The entities to delete. Must not be null or contain null entries.</param>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.Delete(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes a collection of entities, non-transactionally.
            </summary>
            <param name="entities">The entities to delete. Must not be null or contain null entries.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.DeleteAsync(Google.Datastore.V1.Entity,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes a single entity, non-transactionally and asynchronously.
            </summary>
            <remarks>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.DeleteAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)"/>.</remarks>
            <param name="entity">The entity to delete. Must not be null.</param>
            <param name="callSettings">If not null, applies overrides to RPC calls.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.DeleteAsync(Google.Datastore.V1.Entity[])">
            <summary>
            Deletes a collection of entities, non-transactionally and asynchronously.
            </summary>
            <remarks>
            <para>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.DeleteAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)"/>.</para>
            <para>
            Call settings are not supported on this call due to restrictions with methods containing a parameter array and optional parameters.
            To specify options, create a collection or array explicitly, and call <see cref="M:Google.Datastore.V1.DatastoreDb.DeleteAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)"/>.
            </para>
            </remarks>
            <param name="entities">The entities to delete. Must not be null or contain null entries.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.DeleteAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes a collection of entities, non-transactionally and asynchronously.
            </summary>
            <param name="entities">The entities to delete. Must not be null or contain null entries.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.Delete(Google.Datastore.V1.Key,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes a single key, non-transactionally.
            </summary>
            <remarks>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.Delete(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)"/>.</remarks>
            <param name="key">The key to delete. Must not be null.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.Delete(Google.Datastore.V1.Key[])">
            <summary>
            Deletes a collection of keys, non-transactionally.
            </summary>
            <remarks>
            <para>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.Delete(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)"/>.</para>
            <para>
            Call settings are not supported on this call due to restrictions with methods containing a parameter array and optional parameters.
            To specify options, create a collection or array explicitly, and call <see cref="M:Google.Datastore.V1.DatastoreDb.Delete(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)"/>.
            </para>
            </remarks>
            <param name="keys">The keys to delete. Must not be null or contain null entries.</param>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.Delete(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes a collection of keys, non-transactionally.
            </summary>
            <param name="keys">The keys to delete. Must not be null or contain null entries.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.DeleteAsync(Google.Datastore.V1.Key,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes a single key, non-transactionally and asynchronously.
            </summary>
            <remarks>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.DeleteAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)"/>.</remarks>
            <param name="key">The key to delete. Must not be null.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.DeleteAsync(Google.Datastore.V1.Key[])">
            <summary>
            Deletes a collection of keys, non-transactionally and asynchronously.
            </summary>
            <remarks>
            <para>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreDb.DeleteAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)"/>.</para>
            <para>
            Call settings are not supported on this call due to restrictions with methods containing a parameter array and optional parameters.
            To specify options, create a collection or array explicitly, and call <see cref="M:Google.Datastore.V1.DatastoreDb.DeleteAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)"/>.
            </para>
            </remarks>
            <param name="keys">The keys to delete. Must not be null or contain null entries.</param>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDb.DeleteAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Deletes a collection of keys, non-transactionally and asynchronously.
            </summary>
            <param name="keys">The keys to delete. Must not be null or contain null entries.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
        </member>
        <member name="T:Google.Datastore.V1.DatastoreDbImpl">
            <summary>
            Wrapper around <see cref="T:Google.Datastore.V1.DatastoreClient"/> to provide simpler operations.
            </summary>
            <remarks>
            This is the "default" implementation of <see cref="T:Google.Datastore.V1.DatastoreDb"/>. Most client code
            should refer to <see cref="T:Google.Datastore.V1.DatastoreDb"/>, creating instances with
            <see cref="M:Google.Datastore.V1.DatastoreDb.Create(System.String,System.String,Google.Datastore.V1.DatastoreClient)"/>. The constructor
            of this class is public for the sake of constructor-based dependency injection.
            </remarks>
        </member>
        <member name="P:Google.Datastore.V1.DatastoreDbImpl.Client">
            <inheritdoc/>
        </member>
        <member name="P:Google.Datastore.V1.DatastoreDbImpl.ProjectId">
            <inheritdoc/>
        </member>
        <member name="P:Google.Datastore.V1.DatastoreDbImpl.NamespaceId">
            <inheritdoc/>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDbImpl.#ctor(System.String,System.String,Google.Datastore.V1.DatastoreClient)">
            <summary>
            Constructs an instance from the given project ID, namespace ID and client.
            </summary>
            <remarks>This constructor is primarily provided for constructor-based dependency injection.
            The static <see cref="M:Google.Datastore.V1.DatastoreDb.Create(System.String,System.String,Google.Datastore.V1.DatastoreClient)"/> method is provided
            for manually obtaining an instance, including automatic client creation.</remarks>
            <param name="projectId">The project ID. Must not be null.</param>
            <param name="namespaceId">The namespace ID. Must not be null.</param>
            <param name="client">The client to use for underlying operations. Must not be null.</param>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDbImpl.CreateKeyFactory(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDbImpl.RunQueryLazily(Google.Datastore.V1.Query,System.Nullable{Google.Datastore.V1.ReadOptions.Types.ReadConsistency},Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDbImpl.RunQueryLazilyAsync(Google.Datastore.V1.Query,System.Nullable{Google.Datastore.V1.ReadOptions.Types.ReadConsistency},Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDbImpl.RunQueryLazily(Google.Datastore.V1.GqlQuery,System.Nullable{Google.Datastore.V1.ReadOptions.Types.ReadConsistency},Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDbImpl.RunQueryLazilyAsync(Google.Datastore.V1.GqlQuery,System.Nullable{Google.Datastore.V1.ReadOptions.Types.ReadConsistency},Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDbImpl.BeginTransaction(Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDbImpl.BeginTransactionAsync(Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDbImpl.AllocateIds(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDbImpl.AllocateIdsAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDbImpl.Lookup(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},System.Nullable{Google.Datastore.V1.ReadOptions.Types.ReadConsistency},Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDbImpl.LookupAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},System.Nullable{Google.Datastore.V1.ReadOptions.Types.ReadConsistency},Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDbImpl.Insert(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDbImpl.InsertAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDbImpl.Upsert(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDbImpl.UpsertAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDbImpl.Update(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDbImpl.UpdateAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDbImpl.Delete(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDbImpl.DeleteAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity},Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDbImpl.Delete(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc/>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreDbImpl.DeleteAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc/>
        </member>
        <member name="T:Google.Datastore.V1.Datastore">
            <summary>
             Each RPC normalizes the partition IDs of the keys in its input entities,
             and always returns entities with keys with normalized partition IDs.
             This applies to all keys and entities, including those in values, except keys
             with both an empty path and an empty or unset partition ID. Normalization of
             input keys sets the project ID (if not already set) to the project ID from
             the request.
            </summary>
        </member>
        <member name="P:Google.Datastore.V1.Datastore.Descriptor">
            <summary>Service descriptor</summary>
        </member>
        <member name="T:Google.Datastore.V1.Datastore.DatastoreBase">
            <summary>Base class for server-side implementations of Datastore</summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreBase.Lookup(Google.Datastore.V1.LookupRequest,Grpc.Core.ServerCallContext)">
            <summary>
             Looks up entities by key.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreBase.RunQuery(Google.Datastore.V1.RunQueryRequest,Grpc.Core.ServerCallContext)">
            <summary>
             Queries for entities.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreBase.BeginTransaction(Google.Datastore.V1.BeginTransactionRequest,Grpc.Core.ServerCallContext)">
            <summary>
             Begins a new transaction.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreBase.Commit(Google.Datastore.V1.CommitRequest,Grpc.Core.ServerCallContext)">
            <summary>
             Commits a transaction, optionally creating, deleting or modifying some
             entities.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreBase.Rollback(Google.Datastore.V1.RollbackRequest,Grpc.Core.ServerCallContext)">
            <summary>
             Rolls back a transaction.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreBase.AllocateIds(Google.Datastore.V1.AllocateIdsRequest,Grpc.Core.ServerCallContext)">
            <summary>
             Allocates IDs for the given keys, which is useful for referencing an entity
             before it is inserted.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.Datastore.DatastoreClient">
            <summary>Client for Datastore</summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.#ctor(Grpc.Core.Channel)">
            <summary>Creates a new client for Datastore</summary>
            <param name="channel">The channel to use to make remote calls.</param>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.#ctor(Grpc.Core.CallInvoker)">
            <summary>Creates a new client for Datastore that uses a custom <c>CallInvoker</c>.</summary>
            <param name="callInvoker">The callInvoker to use to make remote calls.</param>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.#ctor">
            <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)">
            <summary>Protected constructor to allow creation of configured clients.</summary>
            <param name="configuration">The client configuration.</param>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.Lookup(Google.Datastore.V1.LookupRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
             Looks up entities by key.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.Lookup(Google.Datastore.V1.LookupRequest,Grpc.Core.CallOptions)">
            <summary>
             Looks up entities by key.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.LookupAsync(Google.Datastore.V1.LookupRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
             Looks up entities by key.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.LookupAsync(Google.Datastore.V1.LookupRequest,Grpc.Core.CallOptions)">
            <summary>
             Looks up entities by key.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.RunQuery(Google.Datastore.V1.RunQueryRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
             Queries for entities.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.RunQuery(Google.Datastore.V1.RunQueryRequest,Grpc.Core.CallOptions)">
            <summary>
             Queries for entities.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.RunQueryAsync(Google.Datastore.V1.RunQueryRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
             Queries for entities.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.RunQueryAsync(Google.Datastore.V1.RunQueryRequest,Grpc.Core.CallOptions)">
            <summary>
             Queries for entities.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.BeginTransaction(Google.Datastore.V1.BeginTransactionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
             Begins a new transaction.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.BeginTransaction(Google.Datastore.V1.BeginTransactionRequest,Grpc.Core.CallOptions)">
            <summary>
             Begins a new transaction.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.BeginTransactionAsync(Google.Datastore.V1.BeginTransactionRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
             Begins a new transaction.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.BeginTransactionAsync(Google.Datastore.V1.BeginTransactionRequest,Grpc.Core.CallOptions)">
            <summary>
             Begins a new transaction.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.Commit(Google.Datastore.V1.CommitRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
             Commits a transaction, optionally creating, deleting or modifying some
             entities.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.Commit(Google.Datastore.V1.CommitRequest,Grpc.Core.CallOptions)">
            <summary>
             Commits a transaction, optionally creating, deleting or modifying some
             entities.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.CommitAsync(Google.Datastore.V1.CommitRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
             Commits a transaction, optionally creating, deleting or modifying some
             entities.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.CommitAsync(Google.Datastore.V1.CommitRequest,Grpc.Core.CallOptions)">
            <summary>
             Commits a transaction, optionally creating, deleting or modifying some
             entities.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.Rollback(Google.Datastore.V1.RollbackRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
             Rolls back a transaction.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.Rollback(Google.Datastore.V1.RollbackRequest,Grpc.Core.CallOptions)">
            <summary>
             Rolls back a transaction.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.RollbackAsync(Google.Datastore.V1.RollbackRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
             Rolls back a transaction.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.RollbackAsync(Google.Datastore.V1.RollbackRequest,Grpc.Core.CallOptions)">
            <summary>
             Rolls back a transaction.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.AllocateIds(Google.Datastore.V1.AllocateIdsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
             Allocates IDs for the given keys, which is useful for referencing an entity
             before it is inserted.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.AllocateIds(Google.Datastore.V1.AllocateIdsRequest,Grpc.Core.CallOptions)">
            <summary>
             Allocates IDs for the given keys, which is useful for referencing an entity
             before it is inserted.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.AllocateIdsAsync(Google.Datastore.V1.AllocateIdsRequest,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
             Allocates IDs for the given keys, which is useful for referencing an entity
             before it is inserted.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.DatastoreClient.AllocateIdsAsync(Google.Datastore.V1.AllocateIdsRequest,Grpc.Core.CallOptions)">
            <summary>
             Allocates IDs for the given keys, which is useful for referencing an entity
             before it is inserted.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Datastore.BindService(Google.Datastore.V1.Datastore.DatastoreBase)">
            <summary>Creates service definition that can be registered with a server</summary>
        </member>
        <member name="T:Google.Datastore.V1.DatastoreQueryResults">
            <summary>
            A complete set of query results, fetched and stored in memory. Results are
            fetched from a <see cref="T:Google.Datastore.V1.LazyDatastoreQuery"/> or <see cref="T:Google.Datastore.V1.AsyncLazyDatastoreQuery"/>
            until the query-specified limit or end cursor is reached, or no more results are available.
            </summary>
        </member>
        <member name="P:Google.Datastore.V1.DatastoreQueryResults.Entities">
            <summary>
            The entities returned by the query.
            </summary>
        </member>
        <member name="P:Google.Datastore.V1.DatastoreQueryResults.MoreResults">
            <summary>
            The condition that caused the query to complete, indicating whether more
            results are available beyond the query limit or end cursor, or whether
            the data has been exhausted.
            </summary>
        </member>
        <member name="P:Google.Datastore.V1.DatastoreQueryResults.EndCursor">
            <summary>
            The cursor at the end of the results. This will never be null.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.DatastoreTransaction">
            <summary>
            <para>
            Convenience wrapper around a Datastore transaction. All mutation operations (<see cref="M:Google.Datastore.V1.DatastoreTransaction.Insert(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity})"/>,
            <see cref="M:Google.Datastore.V1.DatastoreTransaction.Delete(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key})"/>, <see cref="M:Google.Datastore.V1.DatastoreTransaction.Update(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity})"/> and <see cref="M:Google.Datastore.V1.DatastoreTransaction.Upsert(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity})"/>)
            merely add to a list of mutations which are performed in a single <see cref="M:Google.Datastore.V1.DatastoreTransaction.Commit(Google.Api.Gax.Grpc.CallSettings)"/> or <see cref="M:Google.Datastore.V1.DatastoreTransaction.CommitAsync(Google.Api.Gax.Grpc.CallSettings)"/>
            operation. This means the mutation methods are all synchronous and do not take call settings, as they don't perform any
            API operations.
            </para>
            <para>
            Even though transactions aren't inherently related to a specific partition ID, the expected usage is that queries run inside
            a transaction are likely to be in a single partition, specified in a <see cref="T:Google.Datastore.V1.DatastoreDb"/> used to create the transaction.
            </para>
            <para>
            Disposing of a transaction calls <see cref="M:Google.Datastore.V1.DatastoreTransaction.Rollback(Google.Api.Gax.Grpc.CallSettings)"/> if the transaction has not already been committed
            or rolled back.
            </para>
            <para>
            This is an abstract class, implemented by <see cref="T:Google.Datastore.V1.DatastoreTransactionImpl"/> for production use. Users creating their own
            <see cref="T:Google.Datastore.V1.DatastoreDb"/> subclasses may choose to create fake implementations for testing purposes. There are no abstract
            methods in this class; instead, all methods either delegate to another or throw <see cref="T:System.NotImplementedException"/>.
            </para>
            </summary>
        </member>
        <member name="P:Google.Datastore.V1.DatastoreTransaction.TransactionId">
            <summary>
            The ID of the transaction, used implicitly in operations performed with this object.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.Create(Google.Datastore.V1.DatastoreClient,System.String,System.String,Google.Protobuf.ByteString)">
            <summary>
            Constructs an instance of <see cref="T:Google.Datastore.V1.DatastoreClientImpl"/> with the given arguments.
            Clients using the <see cref="T:Google.Datastore.V1.DatastoreDb"/> abstraction layer would normally call
            <see cref="M:Google.Datastore.V1.DatastoreDb.BeginTransaction(Google.Api.Gax.Grpc.CallSettings)"/> or <see cref="M:Google.Datastore.V1.DatastoreDb.BeginTransactionAsync(Google.Api.Gax.Grpc.CallSettings)"/>
            instead of calling this method directly.
            </summary>
            <param name="client">The client to use for Datastore operations. Must not be null.</param>
            <param name="projectId">The ID of the project of the Datastore operations. Must not be null.</param>
            <param name="namespaceId">The ID of the namespace which is combined with <paramref name="projectId"/> to form a partition ID
            to use in query operations. May be null.</param>
            <param name="transactionId">The transaction obtained by an earlier <see cref="M:Google.Datastore.V1.DatastoreClient.BeginTransaction(System.String,Google.Api.Gax.Grpc.CallSettings)"/>
            or the asynchronous equivalent. Must not be null</param>
            <returns>A <see cref="T:Google.Datastore.V1.DatastoreTransaction"/> representation of the specified transaction.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.RunQuery(Google.Datastore.V1.Query,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Runs the given query eagerly in this transaction, retrieving all results in memory and indicating whether more
            results may be available beyond the query's limit. Use this method when your query has a limited
            number of results, for example to build a web application which fetches results in pages.
            </summary>
            <remarks>
            <para>
            Using a transaction ensures that a commit operation will fail if any of the entities returned
            by this query have been modified while the transaction is active. Note that modifications performed
            as part of this operation are not reflected in the query results.
            </para>
            <para>The default implementation of this method delegates to <see cref="M:Google.Datastore.V1.DatastoreTransaction.RunQueryLazily(Google.Datastore.V1.Query,Google.Api.Gax.Grpc.CallSettings)"/>
            and calls <see cref="M:Google.Datastore.V1.LazyDatastoreQuery.GetAllResults"/> on the return value.</para>
            </remarks>
            <param name="query">The query to execute. Must not be null.</param>
            <param name="callSettings">If not null, applies overrides to RPC calls.</param>
            <returns>The complete query results.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.RunQueryAsync(Google.Datastore.V1.Query,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Runs the given query eagerly and asynchronously in this transaction, retrieving all results in memory
            and indicating whether more results may be available beyond the query's limit. Use this method when your query has a limited
            number of results, for example to build a web application which fetches results in pages.
            </summary>
            <remarks>
            <para>
            Using a transaction ensures that a commit operation will fail if any of the entities returned
            by this query have been modified while the transaction is active. Note that modifications performed
            as part of this operation are not reflected in the query results.
            </para>
            <para>The default implementation of this method delegates to <see cref="M:Google.Datastore.V1.DatastoreTransaction.RunQueryLazilyAsync(Google.Datastore.V1.Query,Google.Api.Gax.Grpc.CallSettings)"/>
            and calls <see cref="M:Google.Datastore.V1.AsyncLazyDatastoreQuery.GetAllResultsAsync"/> on the return value.</para>
            </remarks>
            <param name="query">The query to execute. Must not be null.</param>
            <param name="callSettings">If not null, applies overrides to RPC calls.</param>
            <returns>A task representing the asynchronous operation. The result of the task is the complete set of query results.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.RunQueryLazily(Google.Datastore.V1.Query,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lazily executes the given structured query in this transaction.
            </summary>
            <remarks>
            <para>
            Using a transaction ensures that a commit operation will fail if any of the entities returned
            by this query have been modified while the transaction is active. Note that modifications performed
            as part of this operation are not reflected in the query results.
            </para>
            <para>
            The results are requested lazily: no API calls will be made until the application starts
            iterating over the results. Iterating over the same <see cref="T:Google.Datastore.V1.LazyDatastoreQuery"/> object
            multiple times will execute the query again, potentially returning different results.
            </para>
            </remarks>
            <param name="query">The query to execute. Must not be null.</param>
            <param name="callSettings">If not null, applies overrides to RPC calls.</param>
            <returns>A <see cref="T:Google.Datastore.V1.LazyDatastoreQuery"/> representing the the lazy query results.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.RunQueryLazilyAsync(Google.Datastore.V1.Query,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lazily executes the given structured query in this transaction for asynchronous consumption.
            </summary>
            <remarks>
            <para>
            Using a transaction ensures that a commit operation will fail if any of the entities returned
            by this query have been modified while the transaction is active. Note that modifications performed
            as part of this operation are not reflected in the query results.
            </para>
            <para>
            The results are requested lazily: no API calls will be made until the application starts
            iterating over the results. Iterating over the same <see cref="T:Google.Datastore.V1.LazyDatastoreQuery"/> object
            multiple times will execute the query again, potentially returning different results.
            </para>
            </remarks>
            <param name="query">The query to execute. Must not be null.</param>
            <param name="callSettings">If not null, applies overrides to RPC calls.</param>
            <returns>An <see cref="T:Google.Datastore.V1.AsyncLazyDatastoreQuery"/> representing the result of the query.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.RunQuery(Google.Datastore.V1.GqlQuery,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Runs the given query eagerly in this transaction, retrieving all results in memory and indicating whether more
            results may be available beyond the query's limit. Use this method when your query has a limited
            number of results, for example to build a web application which fetches results in pages.
            </summary>
            <remarks>
            <para>
            Using a transaction ensures that a commit operation will fail if any of the entities returned
            by this query have been modified while the transaction is active. Note that modifications performed
            as part of this operation are not reflected in the query results.
            </para>
            <para>The default implementation of this method delegates to <see cref="M:Google.Datastore.V1.DatastoreTransaction.RunQueryLazily(Google.Datastore.V1.GqlQuery,Google.Api.Gax.Grpc.CallSettings)"/>
            and calls <see cref="M:Google.Datastore.V1.LazyDatastoreQuery.GetAllResults"/> on the return value.</para>
            </remarks>
            <param name="query">The query to execute. Must not be null.</param>
            <param name="callSettings">If not null, applies overrides to RPC calls.</param>
            <returns>The complete query results.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.RunQueryAsync(Google.Datastore.V1.GqlQuery,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Runs the given query eagerly and asynchronously in this transaction, retrieving all results in memory and indicating whether more
            results may be available beyond the query's limit. Use this method when your query has a limited
            number of results, for example to build a web application which fetches results in pages.
            </summary>
            <remarks>
            <para>
            Using a transaction ensures that a commit operation will fail if any of the entities returned
            by this query have been modified while the transaction is active. Note that modifications performed
            as part of this operation are not reflected in the query results.
            </para>
            <para>The default implementation of this method delegates to <see cref="M:Google.Datastore.V1.DatastoreTransaction.RunQueryLazilyAsync(Google.Datastore.V1.GqlQuery,Google.Api.Gax.Grpc.CallSettings)"/>
            and calls <see cref="M:Google.Datastore.V1.AsyncLazyDatastoreQuery.GetAllResultsAsync"/> on the return value.</para>
            </remarks>
            <param name="query">The query to execute. Must not be null.</param>
            <param name="callSettings">If not null, applies overrides to RPC calls.</param>
            <returns>A task representing the asynchronous operation. The result of the task is the complete set of query results.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.RunQueryLazily(Google.Datastore.V1.GqlQuery,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lazily executes the given GQL query in this transaction.
            </summary>
            <remarks>
            <para>
            Using a transaction ensures that a commit operation will fail if any of the entities returned
            by this query have been modified while the transaction is active. Note that modifications performed
            as part of this operation are not reflected in the query results.
            </para>
            <para>
            The results are requested lazily: no API calls will be made until the application starts
            iterating over the results. Iterating over the same <see cref="T:Google.Datastore.V1.LazyDatastoreQuery"/> object
            multiple times will execute the query again, potentially returning different results.
            </para>
            </remarks>
            <param name="gqlQuery">The query to execute. Must not be null.</param>
            <param name="callSettings">If not null, applies overrides to RPC calls.</param>
            <returns>A <see cref="T:Google.Datastore.V1.LazyDatastoreQuery"/> representing the result of the query.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.RunQueryLazilyAsync(Google.Datastore.V1.GqlQuery,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Lazily executes the given structured query in this transaction for asynchronous consumption.
            </summary>
            <remarks>
            <para>
            Using a transaction ensures that a commit operation will fail if any of the entities returned
            by this query have been modified while the transaction is active. Note that modifications performed
            as part of this operation are not reflected in the query results.
            </para>
            <para>
            The results are requested lazily: no API calls will be made until the application starts
            iterating over the results. Iterating over the same <see cref="T:Google.Datastore.V1.LazyDatastoreQuery"/> object
            multiple times will execute the query again, potentially returning different results.
            </para>
            </remarks>
            <param name="gqlQuery">The query to execute. Must not be null.</param>
            <param name="callSettings">If not null, applies overrides to RPC calls.</param>
            <returns>An <see cref="T:Google.Datastore.V1.AsyncLazyDatastoreQuery"/> representing the result of the query.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.Lookup(Google.Datastore.V1.Key,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Looks up a single entity by key.
            </summary>
            <remarks>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreTransaction.Lookup(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)"/>.</remarks>
            <param name="key">The key to look up. Must not be null, and must be complete.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The entity with the specified key, or <c>null</c> if no such entity exists.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.Lookup(Google.Datastore.V1.Key[])">
            <summary>
            Looks up a collection of entities by key.
            </summary>
            <remarks>
            <para>
            This call may perform multiple RPC operations in order to look up all keys.
            </para>
            <para>
            This overload does not support the <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> to be specified due to restrictions with
            methods containing a parameter array and optional parameters.
            It simply delegates to <see cref="M:Google.Datastore.V1.DatastoreTransaction.Lookup(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)"/>, passing in a <c>null</c>
            value for the call settings.
            </para>
            </remarks>
            <param name="keys">The keys to look up. Must not be null, and every element must be non-null and refer to a complete key.</param>
            <returns>A collection of entities with the same size as <paramref name="keys"/>, containing corresponding entity
            references, or <c>null</c> where the key was not found.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.Lookup(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Looks up a collection of entities by key.
            </summary>
            <remarks>
            This call may perform multiple RPC operations in order to look up all keys.
            </remarks>
            <param name="keys">The keys to look up. Must not be null, and every element must be non-null and refer to a complete key.</param>
            <param name="callSettings">If not null, applies overrides to RPC calls.</param>
            <returns>A collection of entities with the same size as <paramref name="keys"/>, containing corresponding entity
            references, or <c>null</c> where the key was not found.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.LookupAsync(Google.Datastore.V1.Key,Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Looks up a single entity by key asynchronously.
            </summary>
            <remarks>This method simply delegates to <see cref="M:Google.Datastore.V1.DatastoreTransaction.LookupAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)"/>.</remarks>
            <param name="key">The key to look up. Must not be null, and must be complete.</param>
            <param name="callSettings">If not null, applies overrides to this RPC call.</param>
            <returns>The entity with the specified key, or <c>null</c> if no such entity exists.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.LookupAsync(Google.Datastore.V1.Key[])">
            <summary>
            Looks up a collection of entities by key asynchronously.
            </summary>
            <remarks>
            <para>
            This call may perform multiple RPC operations in order to look up all keys.
            </para>
            <para>
            This overload does not support the <see cref="T:Google.Api.Gax.Grpc.CallSettings"/> to be specified due to restrictions with
            methods containing a parameter array and optional parameters.
            It simply delegates to <see cref="M:Google.Datastore.V1.DatastoreTransaction.LookupAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)"/>, passing in a <c>null</c>
            value for the call settings.
            </para>
            </remarks>
            <param name="keys">The keys to look up. Must not be null, and every element must be non-null and refer to a complete key.</param>
            <returns>A collection of entities with the same size as <paramref name="keys"/>, containing corresponding entity
            references, or <c>null</c> where the key was not found.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.LookupAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Looks up a collection of entities by key asynchronously.
            </summary>
            <remarks>
            This call may perform multiple RPC operations in order to look up all keys.
            </remarks>
            <param name="keys">The keys to look up. Must not be null, and every element must be non-null and refer to a complete key.</param>
            <param name="callSettings">If not null, applies overrides to RPC calls.</param>
            <returns>A collection of entities with the same size as <paramref name="keys"/>, containing corresponding entity
            references, or <c>null</c> where the key was not found.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.Upsert(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity})">
            <summary>
            Adds upsert operations for all the specified keys to this transaction.
            </summary>
            <param name="entities">The entities to upsert. Must not be null.</param>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.Upsert(Google.Datastore.V1.Entity[])">
            <summary>
            Adds upsert operations for all the specified keys to this transaction.
            </summary>
            <remarks>This method delegates to <see cref="M:Google.Datastore.V1.DatastoreTransaction.Upsert(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity})"/>.</remarks>
            <param name="entities">The entities to upsert. Must not be null.</param>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.Update(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity})">
            <summary>
            Adds update operations for all the specified keys to this transaction.
            </summary>
            <param name="entities">The entities to update. Must not be null.</param>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.Update(Google.Datastore.V1.Entity[])">
            <summary>
            Adds update operations for all the specified keys to this transaction.
            </summary>
            <remarks>This method delegates to <see cref="M:Google.Datastore.V1.DatastoreTransaction.Update(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity})"/>.</remarks>
            <param name="entities">The entities to update. Must not be null.</param>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.Insert(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity})">
            <summary>
            Adds insert operations for all the specified keys to this transaction.
            </summary>
            <param name="entities">The entities to insert. Must not be null.</param>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.Insert(Google.Datastore.V1.Entity[])">
            <summary>
            Adds insert operations for all the specified keys to this transaction.
            </summary>
            <remarks>This method delegates to <see cref="M:Google.Datastore.V1.DatastoreTransaction.Insert(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity})"/>.</remarks>
            <param name="entities">The entities to insert. Must not be null.</param>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.Delete(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity})">
            <summary>
            Adds delete operations for all the specified keys to this transaction.
            </summary>
            <param name="entities">The entities to delete. Must not be null.</param>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.Delete(Google.Datastore.V1.Entity[])">
            <summary>
            Adds delete operations for all the specified keys to this transaction.
            </summary>
            <remarks>This method delegates to <see cref="M:Google.Datastore.V1.DatastoreTransaction.Delete(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity})"/>.</remarks>
            <param name="entities">The entities to delete. Must not be null.</param>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.Delete(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key})">
            <summary>
            Adds deletion operations for all the specified keys to this transaction.
            </summary>
            <param name="keys">The keys to delete. Must not be null.</param>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.Delete(Google.Datastore.V1.Key[])">
            <summary>
            Adds deletion operations for all the specified keys to this transaction.
            </summary>
            <remarks>This method delegates to <see cref="M:Google.Datastore.V1.DatastoreTransaction.Delete(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key})"/>.</remarks>
            <param name="keys">The keys to delete. Must not be null.</param>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.Commit(Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Commits all mutations in this transaction.
            </summary>
            <exception cref="T:System.InvalidOperationException">The transaction has already been committed or rolled back.</exception>
            <returns>The response from the commit operation. This can be used to determine server-allocated keys.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.CommitAsync(Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Commits all mutations in this transaction asynchronously.
            </summary>
            <param name="callSettings">If not null, applies overrides to RPC calls.</param>
            <exception cref="T:System.InvalidOperationException">The transaction has already been committed or rolled back.</exception>
            <returns>The response from the commit operation. This can be used to determine server-allocated keys.</returns>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.Rollback(Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Rolls back this transaction.
            </summary>
            <remarks>This method is rarely useful explicitly; the <see cref="M:Google.Datastore.V1.DatastoreTransaction.Dispose"/> method rolls back the transaction if it
            is still active, so a <c>using</c> statement is normally preferable to this.</remarks>
            <param name="callSettings">If not null, applies overrides to RPC calls.</param>
            <exception cref="T:System.InvalidOperationException">The transaction has already been committed or rolled back.</exception>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.RollbackAsync(Google.Api.Gax.Grpc.CallSettings)">
            <summary>
            Rolls back this transaction asynchronously.
            </summary>
            <remarks>This method is rarely useful explicitly; the <see cref="M:Google.Datastore.V1.DatastoreTransaction.Dispose"/> method rolls back the transaction if it
            is still active, so a <c>using</c> statement is normally preferable to this.</remarks>
            <param name="callSettings">If not null, applies overrides to RPC calls.</param>
            <exception cref="T:System.InvalidOperationException">The transaction has already been committed or rolled back.</exception>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransaction.Dispose">
            <summary>
            If the transaction has already been committed, this operation is a no-op.
            Otherwise, it rolls back the transaction.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.DatastoreTransactionImpl">
            <summary>
            Production implementation of <see cref="T:Google.Datastore.V1.DatastoreTransaction"/>, using a <see cref="T:Google.Datastore.V1.DatastoreClient"/>
            to implement the operations.
            </summary>
        </member>
        <member name="P:Google.Datastore.V1.DatastoreTransactionImpl.TransactionId">
            <inheritdoc />
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransactionImpl.#ctor(Google.Datastore.V1.DatastoreClient,System.String,System.String,Google.Protobuf.ByteString)">
            <summary>
            Constructs a <see cref="T:Google.Datastore.V1.DatastoreTransactionImpl"/> from a client, project ID and transaction ID.
            </summary>
            <remarks>
            While this can be constructed manually, the expectation is that instances of this class are obtained via
            <see cref="M:Google.Datastore.V1.DatastoreDb.BeginTransaction(Google.Api.Gax.Grpc.CallSettings)"/> or <see cref="M:Google.Datastore.V1.DatastoreDb.BeginTransactionAsync(Google.Api.Gax.Grpc.CallSettings)"/>.
            </remarks>
            <param name="client">The client to use for Datastore operations. Must not be null.</param>
            <param name="projectId">The ID of the project of the Datastore operations. Must not be null.</param>
            <param name="namespaceId">The ID of the namespace which is combined with <paramref name="projectId"/> to form a partition ID
            to use in query operations. May be null.</param>
            <param name="transactionId">The transaction obtained by an earlier <see cref="M:Google.Datastore.V1.DatastoreClient.BeginTransaction(System.String,Google.Api.Gax.Grpc.CallSettings)"/>
            or the asynchronous equivalent. Must not be null</param>
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransactionImpl.RunQueryLazily(Google.Datastore.V1.Query,Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc />
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransactionImpl.RunQueryLazilyAsync(Google.Datastore.V1.Query,Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc />
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransactionImpl.RunQueryLazily(Google.Datastore.V1.GqlQuery,Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc />
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransactionImpl.RunQueryLazilyAsync(Google.Datastore.V1.GqlQuery,Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc />
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransactionImpl.Lookup(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc />
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransactionImpl.LookupAsync(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key},Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc />
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransactionImpl.Upsert(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity})">
            <inheritdoc />
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransactionImpl.Update(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity})">
            <inheritdoc />
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransactionImpl.Insert(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity})">
            <inheritdoc />
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransactionImpl.Delete(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Entity})">
            <inheritdoc />
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransactionImpl.Delete(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Key})">
            <inheritdoc />
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransactionImpl.Commit(Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc />
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransactionImpl.CommitAsync(Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc />
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransactionImpl.Rollback(Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc />
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransactionImpl.RollbackAsync(Google.Api.Gax.Grpc.CallSettings)">
            <inheritdoc />
        </member>
        <member name="M:Google.Datastore.V1.DatastoreTransactionImpl.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Google.Datastore.V1.EntityReflection">
            <summary>Holder for reflection information generated from google/datastore/v1/entity.proto</summary>
        </member>
        <member name="P:Google.Datastore.V1.EntityReflection.Descriptor">
            <summary>File descriptor for google/datastore/v1/entity.proto</summary>
        </member>
        <member name="T:Google.Datastore.V1.PartitionId">
             <summary>
              A partition ID identifies a grouping of entities. The grouping is always
              by project and namespace, however the namespace ID may be empty.
            
              A partition ID contains several dimensions:
              project ID and namespace ID.
            
              Partition dimensions:
            
              - May be `""`.
              - Must be valid UTF-8 bytes.
              - Must have values that match regex `[A-Za-z\d\.\-_]{1,100}`
              If the value of any dimension matches regex `__.*__`, the partition is
              reserved/read-only.
              A reserved/read-only partition ID is forbidden in certain documented
              contexts.
            
              Foreign partition IDs (in which the project ID does
              not match the context project ID ) are discouraged.
              Reads and writes of foreign partition IDs may fail if the project is not in an active state.
             </summary>
        </member>
        <member name="F:Google.Datastore.V1.PartitionId.ProjectIdFieldNumber">
            <summary>Field number for the "project_id" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.PartitionId.ProjectId">
            <summary>
             The ID of the project to which the entities belong.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.PartitionId.NamespaceIdFieldNumber">
            <summary>Field number for the "namespace_id" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.PartitionId.NamespaceId">
            <summary>
             If not empty, the ID of the namespace to which the entities belong.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.PartitionId.#ctor(System.String,System.String)">
            <summary>
            Creates a partition ID from the given project ID and namespace ID.
            </summary>
            <param name="projectId">The project ID of the partition. Must not be null.</param>
            <param name="namespaceId">The namespace ID of the partition. Must not be null.</param>
        </member>
        <member name="T:Google.Datastore.V1.Key">
            <summary>
             A unique identifier for an entity.
             If a key's partition ID or any of its path kinds or names are
             reserved/read-only, the key is reserved/read-only.
             A reserved/read-only key is forbidden in certain documented contexts.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Key.PartitionIdFieldNumber">
            <summary>Field number for the "partition_id" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Key.PartitionId">
            <summary>
             Entities are partitioned into subsets, currently identified by a project
             ID and namespace ID.
             Queries are scoped to a single partition.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Key.PathFieldNumber">
            <summary>Field number for the "path" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Key.Path">
             <summary>
              The entity path.
              An entity path consists of one or more elements composed of a kind and a
              string or numerical identifier, which identify entities. The first
              element identifies a _root entity_, the second element identifies
              a _child_ of the root entity, the third element identifies a child of the
              second entity, and so forth. The entities identified by all prefixes of
              the path are called the element's _ancestors_.
            
              An entity path is always fully complete: *all* of the entity's ancestors
              are required to be in the path along with the entity identifier itself.
              The only exception is that in some documented cases, the identifier in the
              last path element (for the entity) itself may be omitted. For example,
              the last path element of the key of `Mutation.insert` may have no
              identifier.
            
              A path can never be empty, and a path can have at most 100 elements.
             </summary>
        </member>
        <member name="T:Google.Datastore.V1.Key.Types">
            <summary>Container for nested types declared in the Key message type.</summary>
        </member>
        <member name="T:Google.Datastore.V1.Key.Types.PathElement">
             <summary>
              A (kind, ID/name) pair used to construct a key path.
            
              If either name or ID is set, the element is complete.
              If neither is set, the element is incomplete.
             </summary>
        </member>
        <member name="F:Google.Datastore.V1.Key.Types.PathElement.KindFieldNumber">
            <summary>Field number for the "kind" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Key.Types.PathElement.Kind">
            <summary>
             The kind of the entity.
             A kind matching regex `__.*__` is reserved/read-only.
             A kind must not contain more than 1500 bytes when UTF-8 encoded.
             Cannot be `""`.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Key.Types.PathElement.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Key.Types.PathElement.Id">
            <summary>
             The auto-allocated ID of the entity.
             Never equal to zero. Values less than zero are discouraged and may not
             be supported in the future.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Key.Types.PathElement.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Key.Types.PathElement.Name">
            <summary>
             The name of the entity.
             A name matching regex `__.*__` is reserved/read-only.
             A name must not be more than 1500 bytes when UTF-8 encoded.
             Cannot be `""`.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.Key.Types.PathElement.IdTypeOneofCase">
            <summary>Enum of possible cases for the "id_type" oneof.</summary>
        </member>
        <member name="M:Google.Datastore.V1.Key.Types.PathElement.#ctor(System.String,System.String)">
            <summary>
            Creates a key path element with the given kind and name.
            </summary>
            <param name="kind">The kind of path element to create. Must not be null.</param>
            <param name="name">The name of the path element to create. Must not be null.</param>
        </member>
        <member name="M:Google.Datastore.V1.Key.Types.PathElement.#ctor(System.String,System.Int64)">
            <summary>
            Creates a key path element with the given kind and ID.
            </summary>
            <param name="kind">The kind of path element to create. Must not be null.</param>
            <param name="id">The ID of the path element to create.</param>
        </member>
        <member name="M:Google.Datastore.V1.Key.ToDelete">
            <summary>
            Creates a new mutation representing a delete of this key.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Google.Datastore.V1.Key.WithElement(Google.Datastore.V1.Key.Types.PathElement)">
            <summary>
            Creates a clone of this key and appends the specified path element to the clone.
            </summary>
            <param name="pathElement">The path element to append. Must not be null.</param>
            <returns>A clone of this key, with the specified path element.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Key.WithElement(System.String,System.String)">
            <summary>
            Creates a clone of this key and appends a new path element with the specified kind and name to the clone.
            </summary>
            <param name="kind">The kind of path element to append. Must not be null.</param>
            <param name="name">The name of the path element to append. Must not be null.</param>
            <returns>A clone of this key, with the specified path element.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Key.WithElement(System.String,System.Int64)">
            <summary>
            Creates a clone of this key and appends a new path element with the specified kind and ID to the clone.
            </summary>
            <param name="kind">The kind of path element to append. Must not be null.</param>
            <param name="id">The ID of the path element to append.</param>
            <returns>A clone of this key, with the specified path element.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Key.GetParent">
            <summary>
            Constructs a clone of this key and removes the final path element.
            </summary>
            <exception cref="T:System.InvalidOperationException">This key is a "root" key with an empty path.</exception>
            <returns>The parent key to this key.</returns>
        </member>
        <member name="P:Google.Datastore.V1.Key.IsRoot">
            <summary>
            Convenience property to determine whether this key is a root or not. A root key is one
            whose <see cref="P:Google.Datastore.V1.Key.Path"/> is empty.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Key.NormalizeToProjectId(System.String)">
            <summary>
            Helper method to make sure we can use fully-populated keys.
            The Datastore implementation is willing to accept keys without a partition ID,
            or with a partition ID including only a namespace - it fills in the project ID itself.
            However, keys returned from the service *always* have partition IDs, so any time we need
            to match a user-supplied key with a service-supplied key, we should get a normalized version first.
            This method never modifies an existing key - it creates a clone if necessary.
            </summary>
            <returns>Either <c>this</c> if it already contains a project ID, or a clone with the given project ID
            otherwise.</returns>
        </member>
        <member name="T:Google.Datastore.V1.Value">
            <summary>
             A message that can hold any of the supported value types and associated
             metadata.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Value.NullValueFieldNumber">
            <summary>Field number for the "null_value" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Value.NullValue">
            <summary>
             A null value.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Value.BooleanValueFieldNumber">
            <summary>Field number for the "boolean_value" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Value.BooleanValue">
            <summary>
             A boolean value.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Value.IntegerValueFieldNumber">
            <summary>Field number for the "integer_value" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Value.IntegerValue">
            <summary>
             An integer value.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Value.DoubleValueFieldNumber">
            <summary>Field number for the "double_value" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Value.DoubleValue">
            <summary>
             A double value.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Value.TimestampValueFieldNumber">
            <summary>Field number for the "timestamp_value" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Value.TimestampValue">
            <summary>
             A timestamp value.
             When stored in the Datastore, precise only to microseconds;
             any additional precision is rounded down.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Value.KeyValueFieldNumber">
            <summary>Field number for the "key_value" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Value.KeyValue">
            <summary>
             A key value.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Value.StringValueFieldNumber">
            <summary>Field number for the "string_value" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Value.StringValue">
            <summary>
             A UTF-8 encoded string value.
             When `exclude_from_indexes` is false (it is indexed) , may have at most 1500 bytes.
             Otherwise, may be set to at least 1,000,000 bytes.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Value.BlobValueFieldNumber">
            <summary>Field number for the "blob_value" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Value.BlobValue">
            <summary>
             A blob value.
             May have at most 1,000,000 bytes.
             When `exclude_from_indexes` is false, may have at most 1500 bytes.
             In JSON requests, must be base64-encoded.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Value.GeoPointValueFieldNumber">
            <summary>Field number for the "geo_point_value" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Value.GeoPointValue">
            <summary>
             A geo point value representing a point on the surface of Earth.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Value.EntityValueFieldNumber">
            <summary>Field number for the "entity_value" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Value.EntityValue">
             <summary>
              An entity value.
            
              - May have no key.
              - May have a key with an incomplete key path.
              - May have a reserved/read-only key.
             </summary>
        </member>
        <member name="F:Google.Datastore.V1.Value.ArrayValueFieldNumber">
            <summary>Field number for the "array_value" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Value.ArrayValue">
            <summary>
             An array value.
             Cannot contain another array value.
             A `Value` instance that sets field `array_value` must not set fields
             `meaning` or `exclude_from_indexes`.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Value.MeaningFieldNumber">
            <summary>Field number for the "meaning" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Value.Meaning">
            <summary>
             The `meaning` field should only be populated for backwards compatibility.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Value.ExcludeFromIndexesFieldNumber">
            <summary>Field number for the "exclude_from_indexes" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Value.ExcludeFromIndexes">
            <summary>
             If the value should be excluded from all indexes including those defined
             explicitly.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.Value.ValueTypeOneofCase">
            <summary>Enum of possible cases for the "value_type" oneof.</summary>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~System.String">
            <summary>
            Extracts the string value from a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The embedded <see cref="P:Google.Datastore.V1.Value.StringValue"/>, or null if <paramref name="value"/> is null
            or has a kind of <c>NullValue</c>.</returns>
            <exception cref="T:System.InvalidOperationException">The value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~System.Int64">
            <summary>
            Extracts the integer value from a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The embedded <see cref="P:Google.Datastore.V1.Value.IntegerValue"/>.</returns>
            <exception cref="T:System.InvalidOperationException">The value does not have the expected kind.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>        
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~System.Nullable{System.Int64}">
            <summary>
            Extracts the integer value from a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The embedded <see cref="P:Google.Datastore.V1.Value.IntegerValue"/>, or null if <paramref name="value"/> is null
            or has a kind of <c>NullValue</c>.</returns>
            <exception cref="T:System.InvalidOperationException">The value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~Google.Datastore.V1.Key">
            <summary>
            Extracts the key value from a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The embedded <see cref="P:Google.Datastore.V1.Value.KeyValue"/>, or null if <paramref name="value"/> is null
            or has a kind of <c>NullValue</c>.</returns>
            <exception cref="T:System.InvalidOperationException">The value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~System.Double">
            <summary>
            Extracts the floating point value from a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The embedded <see cref="P:Google.Datastore.V1.Value.DoubleValue"/>.</returns>
            <exception cref="T:System.InvalidOperationException">The value does not have the expected kind.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>        
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~System.Nullable{System.Double}">
            <summary>
            Extracts the floating point value from a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The embedded <see cref="P:Google.Datastore.V1.Value.DoubleValue"/>, or null if <paramref name="value"/> is null
            or has a kind of <c>NullValue</c>.</returns>
            <exception cref="T:System.InvalidOperationException">The value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~System.Boolean">
            <summary>
            Extracts the Boolean value from a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The embedded <see cref="P:Google.Datastore.V1.Value.BooleanValue"/>.</returns>
            <exception cref="T:System.InvalidOperationException">The value does not have the expected kind.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>        
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~System.Nullable{System.Boolean}">
            <summary>
            Extracts the Boolean value from a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The embedded <see cref="P:Google.Datastore.V1.Value.BooleanValue"/>, or null if <paramref name="value"/> is null
            or has a kind of <c>NullValue</c>.</returns>
            <exception cref="T:System.InvalidOperationException">The value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~Google.Datastore.V1.ArrayValue">
            <summary>
            Extracts the array value from a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The embedded <see cref="P:Google.Datastore.V1.Value.ArrayValue"/>, or null if <paramref name="value"/> is null
            or has a kind of <c>NullValue</c>.</returns>
            <exception cref="T:System.InvalidOperationException">The value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~Google.Protobuf.ByteString">
            <summary>
            Extracts the blob value from a <see cref="T:Google.Datastore.V1.Value"/> as a <see cref="T:Google.Protobuf.ByteString"/>.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The embedded <see cref="P:Google.Datastore.V1.Value.BlobValue"/>, or null if <paramref name="value"/> is null
            or has a kind of <c>NullValue</c>.</returns>
            <exception cref="T:System.InvalidOperationException">The value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~System.Byte[]">
            <summary>
            Extracts the blob value from a <see cref="T:Google.Datastore.V1.Value"/> as a byte array
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The embedded <see cref="P:Google.Datastore.V1.Value.BlobValue"/>, or null if <paramref name="value"/> is null
            or has a kind of <c>NullValue</c>.</returns>
            <exception cref="T:System.InvalidOperationException">The value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~Google.Datastore.V1.Entity">
            <summary>
            Extracts the array value from a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The embedded <see cref="P:Google.Datastore.V1.Value.EntityValue"/>, or null if <paramref name="value"/> is null.</returns>
            <exception cref="T:System.InvalidOperationException">The value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~Google.Type.LatLng">
            <summary>
            Extracts the geolocation value from a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The embedded <see cref="P:Google.Datastore.V1.Value.GeoPointValue"/>, or null if <paramref name="value"/> is null
            or has a kind of <c>NullValue</c>.</returns>
            <exception cref="T:System.InvalidOperationException">The value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~Google.Protobuf.WellKnownTypes.Timestamp">
            <summary>
            Extracts the timestamp value from a <see cref="T:Google.Datastore.V1.Value"/> as a <see cref="T:Google.Protobuf.WellKnownTypes.Timestamp"/>.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The embedded <see cref="P:Google.Datastore.V1.Value.TimestampValue"/>, or null if <paramref name="value"/> is null
            or has a kind of <c>NullValue</c>.</returns>
            <exception cref="T:System.InvalidOperationException">The value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~System.DateTime">
            <summary>
            Extracts the timestamp value from a <see cref="T:Google.Datastore.V1.Value"/> as a <see cref="T:System.DateTime"/>.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The embedded <see cref="P:Google.Datastore.V1.Value.TimestampValue"/> as a <see cref="T:System.DateTime"/> with a <see cref="T:System.DateTimeKind"/> of <c>Utc</c>.</returns>
            <exception cref="T:System.InvalidOperationException">The value does not have the expected kind.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>        
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~System.Nullable{System.DateTime}">
            <summary>
            Extracts the timestamp value from a <see cref="T:Google.Datastore.V1.Value"/> as a nullable <see cref="T:System.DateTime"/>.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The embedded <see cref="P:Google.Datastore.V1.Value.TimestampValue"/> as a <see cref="T:System.DateTime"/> with a <see cref="T:System.DateTimeKind"/> of <c>Utc</c>,
            or null if <paramref name="value"/> is null or has a kind of <c>NullValue</c>.</returns>
            <exception cref="T:System.InvalidOperationException">The value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~System.DateTimeOffset">
            <summary>
            Extracts the timestamp value from a <see cref="T:Google.Datastore.V1.Value"/> as a <see cref="T:System.DateTimeOffset"/>.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The embedded <see cref="P:Google.Datastore.V1.Value.TimestampValue"/> as a <see cref="T:System.DateTimeOffset"/> with an offset of zero.</returns>
            <exception cref="T:System.InvalidOperationException">The value does not have the expected kind.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>        
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~System.Nullable{System.DateTimeOffset}">
            <summary>
            Extracts the timestamp value from a <see cref="T:Google.Datastore.V1.Value"/> as a nullable <see cref="T:System.DateTimeOffset"/>.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The embedded <see cref="P:Google.Datastore.V1.Value.TimestampValue"/> as a <see cref="T:System.DateTimeOffset"/> with an offset of zero,
            or null if <paramref name="value"/> is null or has a kind of <c>NullValue</c>.</returns>
            <exception cref="T:System.InvalidOperationException">The value does not have the expected kind.</exception>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(System.String)~Google.Datastore.V1.Value">
            <summary>
            Returns a <see cref="T:Google.Datastore.V1.Value"/> with a kind of <c>StringValue</c> and the given data, or a null
            reference of <paramref name="value"/> is null.
            </summary>
            <returns>A <see cref="T:Google.Datastore.V1.Value"/> corresponding to <paramref name="value"/>.</returns>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(System.Int64)~Google.Datastore.V1.Value">
            <summary>
            Returns a <see cref="T:Google.Datastore.V1.Value"/> with a kind of <c>IntegerValue</c> and the given data.
            </summary>
            <returns>A <see cref="T:Google.Datastore.V1.Value"/> corresponding to <paramref name="value"/>.</returns>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(System.Nullable{System.Int64})~Google.Datastore.V1.Value">
            <summary>
            Returns a <see cref="T:Google.Datastore.V1.Value"/> with a kind of <c>IntegerValue</c> and the given data, or a null
            reference of <paramref name="value"/> is null.
            </summary>
            <returns>A <see cref="T:Google.Datastore.V1.Value"/> corresponding to <paramref name="value"/>.</returns>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(Google.Datastore.V1.Key)~Google.Datastore.V1.Value">
            <summary>
            Returns a <see cref="T:Google.Datastore.V1.Value"/> with a kind of <c>KeyValue</c> and the given data, or a null
            reference of <paramref name="value"/> is null.
            </summary>
            <returns>A <see cref="T:Google.Datastore.V1.Value"/> corresponding to <paramref name="value"/>.</returns>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(System.Double)~Google.Datastore.V1.Value">
            <summary>
            Returns a <see cref="T:Google.Datastore.V1.Value"/> with a kind of <c>DoubleValue</c> and the given data.
            </summary>
            <returns>A <see cref="T:Google.Datastore.V1.Value"/> corresponding to <paramref name="value"/>.</returns>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(System.Nullable{System.Double})~Google.Datastore.V1.Value">
            <summary>
            Returns a <see cref="T:Google.Datastore.V1.Value"/> with a kind of <c>DoubleValue</c> and the given data, or a null
            reference of <paramref name="value"/> is null.
            </summary>
            <returns>A <see cref="T:Google.Datastore.V1.Value"/> corresponding to <paramref name="value"/>.</returns>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(System.Boolean)~Google.Datastore.V1.Value">
            <summary>
            Returns a <see cref="T:Google.Datastore.V1.Value"/> with a kind of <c>BooleanValue</c> and the given data.
            </summary>
            <returns>A <see cref="T:Google.Datastore.V1.Value"/> corresponding to <paramref name="value"/>.</returns>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(System.Nullable{System.Boolean})~Google.Datastore.V1.Value">
            <summary>
            Returns a <see cref="T:Google.Datastore.V1.Value"/> with a kind of <c>BooleanValue</c> and the given data, or a null
            reference of <paramref name="value"/> is null.
            </summary>
            <returns>A <see cref="T:Google.Datastore.V1.Value"/> corresponding to <paramref name="value"/>.</returns>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(Google.Datastore.V1.ArrayValue)~Google.Datastore.V1.Value">
            <summary>
            Returns a <see cref="T:Google.Datastore.V1.Value"/> with a kind of <c>ArrayValue</c> and the given data, or a null
            reference of <paramref name="value"/> is null.
            </summary>
            <returns>A <see cref="T:Google.Datastore.V1.Value"/> corresponding to <paramref name="value"/>.</returns>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(Google.Protobuf.ByteString)~Google.Datastore.V1.Value">
            <summary>
            Returns a <see cref="T:Google.Datastore.V1.Value"/> with a kind of <c>BlobValue</c> and the given data, or a null
            reference of <paramref name="value"/> is null.
            </summary>
            <returns>A <see cref="T:Google.Datastore.V1.Value"/> corresponding to <paramref name="value"/>.</returns>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(System.Byte[])~Google.Datastore.V1.Value">
            <summary>
            Returns a <see cref="T:Google.Datastore.V1.Value"/> with a kind of <c>BlobValue</c> and the given data, or a null
            reference of <paramref name="value"/> is null.
            </summary>
            <returns>A <see cref="T:Google.Datastore.V1.Value"/> corresponding to <paramref name="value"/>.</returns>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(Google.Datastore.V1.Entity)~Google.Datastore.V1.Value">
            <summary>
            Returns a <see cref="T:Google.Datastore.V1.Value"/> with a kind of <c>EntityValue</c> and the given data, or a null
            reference of <paramref name="value"/> is null.
            </summary>
            <returns>A <see cref="T:Google.Datastore.V1.Value"/> corresponding to <paramref name="value"/>.</returns>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(Google.Type.LatLng)~Google.Datastore.V1.Value">
            <summary>
            Returns a <see cref="T:Google.Datastore.V1.Value"/> with a kind of <c>GeoPointValue</c> and the given data, or a null
            reference of <paramref name="value"/> is null.
            </summary>
            <returns>A <see cref="T:Google.Datastore.V1.Value"/> corresponding to <paramref name="value"/>.</returns>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(Google.Protobuf.WellKnownTypes.Timestamp)~Google.Datastore.V1.Value">
            <summary>
            Returns a <see cref="T:Google.Datastore.V1.Value"/> with a kind of <c>TimestampValue</c> and the given data, or a null
            reference of <paramref name="value"/> is null.
            </summary>
            <returns>A <see cref="T:Google.Datastore.V1.Value"/> corresponding to <paramref name="value"/>.</returns>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(System.DateTime)~Google.Datastore.V1.Value">
            <summary>
            Returns a <see cref="T:Google.Datastore.V1.Value"/> with a kind of <c>TimestampValue</c> and the given data.
            </summary>
            <returns>A <see cref="T:Google.Datastore.V1.Value"/> corresponding to <paramref name="value"/>.</returns>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(System.Nullable{System.DateTime})~Google.Datastore.V1.Value">
            <summary>
            Returns a <see cref="T:Google.Datastore.V1.Value"/> with a kind of <c>TimestampValue</c> and the given data, or a null
            reference of <paramref name="value"/> is null.
            </summary>
            <returns>A <see cref="T:Google.Datastore.V1.Value"/> corresponding to <paramref name="value"/>.</returns>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(System.DateTimeOffset)~Google.Datastore.V1.Value">
            <summary>
            Returns a <see cref="T:Google.Datastore.V1.Value"/> with a kind of <c>TimestampValue</c> and the given data.
            </summary>
            <returns>A <see cref="T:Google.Datastore.V1.Value"/> corresponding to <paramref name="value"/>.</returns>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(System.Nullable{System.DateTimeOffset})~Google.Datastore.V1.Value">
            <summary>
            Returns a <see cref="T:Google.Datastore.V1.Value"/> with a kind of <c>TimestampValue</c> and the given data, or a null
            reference of <paramref name="value"/> is null.
            </summary>
            <returns>A <see cref="T:Google.Datastore.V1.Value"/> corresponding to <paramref name="value"/>.</returns>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Google.Datastore.V1.Value.ForNull">
            <summary>
            Creates a new <see cref="T:Google.Datastore.V1.Value"/> with a type of <c>NullValue</c>.
            </summary>
            <returns>A value with a type of <c>NullValue</c>.</returns>
        </member>
        <member name="P:Google.Datastore.V1.Value.IsNull">
            <summary>
            Convenience property to determine whether this value has a type of <c>NullValue</c>.
            </summary>
            <value><c>true</c> if the type is <c>NullValue</c>; <c>false</c> otherwise.</value>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(System.String[])~Google.Datastore.V1.Value">
            <summary>
            Converts an array to a <see cref="T:Google.Datastore.V1.Value"/>, by first converting to an <see cref="P:Google.Datastore.V1.Value.ArrayValue"/>
            and then converting the result to a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>The converted array as a <see cref="T:Google.Datastore.V1.Value"/>, or <c>null</c> if <paramref name="values"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(System.Int64[])~Google.Datastore.V1.Value">
            <summary>
            Converts an array to a <see cref="T:Google.Datastore.V1.Value"/>, by first converting to an <see cref="P:Google.Datastore.V1.Value.ArrayValue"/>
            and then converting the result to a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>The converted array as a <see cref="T:Google.Datastore.V1.Value"/>, or <c>null</c> if <paramref name="values"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(System.Nullable{System.Int64}[])~Google.Datastore.V1.Value">
            <summary>
            Converts an array to a <see cref="T:Google.Datastore.V1.Value"/>, by first converting to an <see cref="P:Google.Datastore.V1.Value.ArrayValue"/>
            and then converting the result to a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>The converted array as a <see cref="T:Google.Datastore.V1.Value"/>, or <c>null</c> if <paramref name="values"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(Google.Datastore.V1.Key[])~Google.Datastore.V1.Value">
            <summary>
            Converts an array to a <see cref="T:Google.Datastore.V1.Value"/>, by first converting to an <see cref="P:Google.Datastore.V1.Value.ArrayValue"/>
            and then converting the result to a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>The converted array as a <see cref="T:Google.Datastore.V1.Value"/>, or <c>null</c> if <paramref name="values"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(System.Double[])~Google.Datastore.V1.Value">
            <summary>
            Converts an array to a <see cref="T:Google.Datastore.V1.Value"/>, by first converting to an <see cref="P:Google.Datastore.V1.Value.ArrayValue"/>
            and then converting the result to a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>The converted array as a <see cref="T:Google.Datastore.V1.Value"/>, or <c>null</c> if <paramref name="values"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(System.Nullable{System.Double}[])~Google.Datastore.V1.Value">
            <summary>
            Converts an array to a <see cref="T:Google.Datastore.V1.Value"/>, by first converting to an <see cref="P:Google.Datastore.V1.Value.ArrayValue"/>
            and then converting the result to a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>The converted array as a <see cref="T:Google.Datastore.V1.Value"/>, or <c>null</c> if <paramref name="values"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(System.Boolean[])~Google.Datastore.V1.Value">
            <summary>
            Converts an array to a <see cref="T:Google.Datastore.V1.Value"/>, by first converting to an <see cref="P:Google.Datastore.V1.Value.ArrayValue"/>
            and then converting the result to a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>The converted array as a <see cref="T:Google.Datastore.V1.Value"/>, or <c>null</c> if <paramref name="values"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(System.Nullable{System.Boolean}[])~Google.Datastore.V1.Value">
            <summary>
            Converts an array to a <see cref="T:Google.Datastore.V1.Value"/>, by first converting to an <see cref="P:Google.Datastore.V1.Value.ArrayValue"/>
            and then converting the result to a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>The converted array as a <see cref="T:Google.Datastore.V1.Value"/>, or <c>null</c> if <paramref name="values"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(Google.Datastore.V1.ArrayValue[])~Google.Datastore.V1.Value">
            <summary>
            Converts an array to a <see cref="T:Google.Datastore.V1.Value"/>, by first converting to an <see cref="P:Google.Datastore.V1.Value.ArrayValue"/>
            and then converting the result to a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>The converted array as a <see cref="T:Google.Datastore.V1.Value"/>, or <c>null</c> if <paramref name="values"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(Google.Protobuf.ByteString[])~Google.Datastore.V1.Value">
            <summary>
            Converts an array to a <see cref="T:Google.Datastore.V1.Value"/>, by first converting to an <see cref="P:Google.Datastore.V1.Value.ArrayValue"/>
            and then converting the result to a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>The converted array as a <see cref="T:Google.Datastore.V1.Value"/>, or <c>null</c> if <paramref name="values"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(System.Byte[][])~Google.Datastore.V1.Value">
            <summary>
            Converts an array to a <see cref="T:Google.Datastore.V1.Value"/>, by first converting to an <see cref="P:Google.Datastore.V1.Value.ArrayValue"/>
            and then converting the result to a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>The converted array as a <see cref="T:Google.Datastore.V1.Value"/>, or <c>null</c> if <paramref name="values"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(Google.Datastore.V1.Entity[])~Google.Datastore.V1.Value">
            <summary>
            Converts an array to a <see cref="T:Google.Datastore.V1.Value"/>, by first converting to an <see cref="P:Google.Datastore.V1.Value.ArrayValue"/>
            and then converting the result to a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>The converted array as a <see cref="T:Google.Datastore.V1.Value"/>, or <c>null</c> if <paramref name="values"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(Google.Type.LatLng[])~Google.Datastore.V1.Value">
            <summary>
            Converts an array to a <see cref="T:Google.Datastore.V1.Value"/>, by first converting to an <see cref="P:Google.Datastore.V1.Value.ArrayValue"/>
            and then converting the result to a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>The converted array as a <see cref="T:Google.Datastore.V1.Value"/>, or <c>null</c> if <paramref name="values"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(Google.Protobuf.WellKnownTypes.Timestamp[])~Google.Datastore.V1.Value">
            <summary>
            Converts an array to a <see cref="T:Google.Datastore.V1.Value"/>, by first converting to an <see cref="P:Google.Datastore.V1.Value.ArrayValue"/>
            and then converting the result to a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>The converted array as a <see cref="T:Google.Datastore.V1.Value"/>, or <c>null</c> if <paramref name="values"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(System.DateTime[])~Google.Datastore.V1.Value">
            <summary>
            Converts an array to a <see cref="T:Google.Datastore.V1.Value"/>, by first converting to an <see cref="P:Google.Datastore.V1.Value.ArrayValue"/>
            and then converting the result to a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>The converted array as a <see cref="T:Google.Datastore.V1.Value"/>, or <c>null</c> if <paramref name="values"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(System.Nullable{System.DateTime}[])~Google.Datastore.V1.Value">
            <summary>
            Converts an array to a <see cref="T:Google.Datastore.V1.Value"/>, by first converting to an <see cref="P:Google.Datastore.V1.Value.ArrayValue"/>
            and then converting the result to a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>The converted array as a <see cref="T:Google.Datastore.V1.Value"/>, or <c>null</c> if <paramref name="values"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(System.DateTimeOffset[])~Google.Datastore.V1.Value">
            <summary>
            Converts an array to a <see cref="T:Google.Datastore.V1.Value"/>, by first converting to an <see cref="P:Google.Datastore.V1.Value.ArrayValue"/>
            and then converting the result to a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>The converted array as a <see cref="T:Google.Datastore.V1.Value"/>, or <c>null</c> if <paramref name="values"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(System.Nullable{System.DateTimeOffset}[])~Google.Datastore.V1.Value">
            <summary>
            Converts an array to a <see cref="T:Google.Datastore.V1.Value"/>, by first converting to an <see cref="P:Google.Datastore.V1.Value.ArrayValue"/>
            and then converting the result to a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>The converted array as a <see cref="T:Google.Datastore.V1.Value"/>, or <c>null</c> if <paramref name="values"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Implicit(Google.Datastore.V1.Value[])~Google.Datastore.V1.Value">
            <summary>
            Converts an array to a <see cref="T:Google.Datastore.V1.Value"/>, by first converting to an <see cref="P:Google.Datastore.V1.Value.ArrayValue"/>
            and then converting the result to a <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
            <param name="values">The array to convert.</param>
            <returns>The converted array as a <see cref="T:Google.Datastore.V1.Value"/>, or <c>null</c> if <paramref name="values"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~System.String[]">
            <summary>
            Converts a <see cref="T:Google.Datastore.V1.Value"/> to an array using first the conversion to <see cref="P:Google.Datastore.V1.Value.ArrayValue"/> and then the
            conversion to the array type.
            </summary>
            <param name="value">The value to convert.</param>
            <exception cref="T:System.InvalidOperationException">The value does not represent an array, or any value within it does not have the expected kind.</exception>
            <returns>The converted array, or <c>null</c> if <paramref name="value"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~System.Int64[]">
            <summary>
            Converts a <see cref="T:Google.Datastore.V1.Value"/> to an array using first the conversion to <see cref="P:Google.Datastore.V1.Value.ArrayValue"/> and then the
            conversion to the array type.
            </summary>
            <param name="value">The value to convert.</param>
            <exception cref="T:System.InvalidOperationException">The value does not represent an array, or any value within it does not have the expected kind.</exception>
            <returns>The converted array, or <c>null</c> if <paramref name="value"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~System.Nullable{System.Int64}[]">
            <summary>
            Converts a <see cref="T:Google.Datastore.V1.Value"/> to an array using first the conversion to <see cref="P:Google.Datastore.V1.Value.ArrayValue"/> and then the
            conversion to the array type.
            </summary>
            <param name="value">The value to convert.</param>
            <exception cref="T:System.InvalidOperationException">The value does not represent an array, or any value within it does not have the expected kind.</exception>
            <returns>The converted array, or <c>null</c> if <paramref name="value"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~Google.Datastore.V1.Key[]">
            <summary>
            Converts a <see cref="T:Google.Datastore.V1.Value"/> to an array using first the conversion to <see cref="P:Google.Datastore.V1.Value.ArrayValue"/> and then the
            conversion to the array type.
            </summary>
            <param name="value">The value to convert.</param>
            <exception cref="T:System.InvalidOperationException">The value does not represent an array, or any value within it does not have the expected kind.</exception>
            <returns>The converted array, or <c>null</c> if <paramref name="value"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~System.Double[]">
            <summary>
            Converts a <see cref="T:Google.Datastore.V1.Value"/> to an array using first the conversion to <see cref="P:Google.Datastore.V1.Value.ArrayValue"/> and then the
            conversion to the array type.
            </summary>
            <param name="value">The value to convert.</param>
            <exception cref="T:System.InvalidOperationException">The value does not represent an array, or any value within it does not have the expected kind.</exception>
            <returns>The converted array, or <c>null</c> if <paramref name="value"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~System.Nullable{System.Double}[]">
            <summary>
            Converts a <see cref="T:Google.Datastore.V1.Value"/> to an array using first the conversion to <see cref="P:Google.Datastore.V1.Value.ArrayValue"/> and then the
            conversion to the array type.
            </summary>
            <param name="value">The value to convert.</param>
            <exception cref="T:System.InvalidOperationException">The value does not represent an array, or any value within it does not have the expected kind.</exception>
            <returns>The converted array, or <c>null</c> if <paramref name="value"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~System.Boolean[]">
            <summary>
            Converts a <see cref="T:Google.Datastore.V1.Value"/> to an array using first the conversion to <see cref="P:Google.Datastore.V1.Value.ArrayValue"/> and then the
            conversion to the array type.
            </summary>
            <param name="value">The value to convert.</param>
            <exception cref="T:System.InvalidOperationException">The value does not represent an array, or any value within it does not have the expected kind.</exception>
            <returns>The converted array, or <c>null</c> if <paramref name="value"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~System.Nullable{System.Boolean}[]">
            <summary>
            Converts a <see cref="T:Google.Datastore.V1.Value"/> to an array using first the conversion to <see cref="P:Google.Datastore.V1.Value.ArrayValue"/> and then the
            conversion to the array type.
            </summary>
            <param name="value">The value to convert.</param>
            <exception cref="T:System.InvalidOperationException">The value does not represent an array, or any value within it does not have the expected kind.</exception>
            <returns>The converted array, or <c>null</c> if <paramref name="value"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~Google.Datastore.V1.ArrayValue[]">
            <summary>
            Converts a <see cref="T:Google.Datastore.V1.Value"/> to an array using first the conversion to <see cref="P:Google.Datastore.V1.Value.ArrayValue"/> and then the
            conversion to the array type.
            </summary>
            <param name="value">The value to convert.</param>
            <exception cref="T:System.InvalidOperationException">The value does not represent an array, or any value within it does not have the expected kind.</exception>
            <returns>The converted array, or <c>null</c> if <paramref name="value"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~Google.Protobuf.ByteString[]">
            <summary>
            Converts a <see cref="T:Google.Datastore.V1.Value"/> to an array using first the conversion to <see cref="P:Google.Datastore.V1.Value.ArrayValue"/> and then the
            conversion to the array type.
            </summary>
            <param name="value">The value to convert.</param>
            <exception cref="T:System.InvalidOperationException">The value does not represent an array, or any value within it does not have the expected kind.</exception>
            <returns>The converted array, or <c>null</c> if <paramref name="value"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~System.Byte[][]">
            <summary>
            Converts a <see cref="T:Google.Datastore.V1.Value"/> to an array using first the conversion to <see cref="P:Google.Datastore.V1.Value.ArrayValue"/> and then the
            conversion to the array type.
            </summary>
            <param name="value">The value to convert.</param>
            <exception cref="T:System.InvalidOperationException">The value does not represent an array, or any value within it does not have the expected kind.</exception>
            <returns>The converted array, or <c>null</c> if <paramref name="value"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~Google.Datastore.V1.Entity[]">
            <summary>
            Converts a <see cref="T:Google.Datastore.V1.Value"/> to an array using first the conversion to <see cref="P:Google.Datastore.V1.Value.ArrayValue"/> and then the
            conversion to the array type.
            </summary>
            <param name="value">The value to convert.</param>
            <exception cref="T:System.InvalidOperationException">The value does not represent an array, or any value within it does not have the expected kind.</exception>
            <returns>The converted array, or <c>null</c> if <paramref name="value"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~Google.Type.LatLng[]">
            <summary>
            Converts a <see cref="T:Google.Datastore.V1.Value"/> to an array using first the conversion to <see cref="P:Google.Datastore.V1.Value.ArrayValue"/> and then the
            conversion to the array type.
            </summary>
            <param name="value">The value to convert.</param>
            <exception cref="T:System.InvalidOperationException">The value does not represent an array, or any value within it does not have the expected kind.</exception>
            <returns>The converted array, or <c>null</c> if <paramref name="value"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~Google.Protobuf.WellKnownTypes.Timestamp[]">
            <summary>
            Converts a <see cref="T:Google.Datastore.V1.Value"/> to an array using first the conversion to <see cref="P:Google.Datastore.V1.Value.ArrayValue"/> and then the
            conversion to the array type.
            </summary>
            <param name="value">The value to convert.</param>
            <exception cref="T:System.InvalidOperationException">The value does not represent an array, or any value within it does not have the expected kind.</exception>
            <returns>The converted array, or <c>null</c> if <paramref name="value"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~System.DateTime[]">
            <summary>
            Converts a <see cref="T:Google.Datastore.V1.Value"/> to an array using first the conversion to <see cref="P:Google.Datastore.V1.Value.ArrayValue"/> and then the
            conversion to the array type.
            </summary>
            <param name="value">The value to convert.</param>
            <exception cref="T:System.InvalidOperationException">The value does not represent an array, or any value within it does not have the expected kind.</exception>
            <returns>The converted array, or <c>null</c> if <paramref name="value"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~System.Nullable{System.DateTime}[]">
            <summary>
            Converts a <see cref="T:Google.Datastore.V1.Value"/> to an array using first the conversion to <see cref="P:Google.Datastore.V1.Value.ArrayValue"/> and then the
            conversion to the array type.
            </summary>
            <param name="value">The value to convert.</param>
            <exception cref="T:System.InvalidOperationException">The value does not represent an array, or any value within it does not have the expected kind.</exception>
            <returns>The converted array, or <c>null</c> if <paramref name="value"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~System.DateTimeOffset[]">
            <summary>
            Converts a <see cref="T:Google.Datastore.V1.Value"/> to an array using first the conversion to <see cref="P:Google.Datastore.V1.Value.ArrayValue"/> and then the
            conversion to the array type.
            </summary>
            <param name="value">The value to convert.</param>
            <exception cref="T:System.InvalidOperationException">The value does not represent an array, or any value within it does not have the expected kind.</exception>
            <returns>The converted array, or <c>null</c> if <paramref name="value"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~System.Nullable{System.DateTimeOffset}[]">
            <summary>
            Converts a <see cref="T:Google.Datastore.V1.Value"/> to an array using first the conversion to <see cref="P:Google.Datastore.V1.Value.ArrayValue"/> and then the
            conversion to the array type.
            </summary>
            <param name="value">The value to convert.</param>
            <exception cref="T:System.InvalidOperationException">The value does not represent an array, or any value within it does not have the expected kind.</exception>
            <returns>The converted array, or <c>null</c> if <paramref name="value"/> is <c>null</c>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Value.op_Explicit(Google.Datastore.V1.Value)~Google.Datastore.V1.Value[]">
            <summary>
            Converts a <see cref="T:Google.Datastore.V1.Value"/> to an array using first the conversion to <see cref="P:Google.Datastore.V1.Value.ArrayValue"/> and then the
            conversion to the array type.
            </summary>
            <param name="value">The value to convert.</param>
            <exception cref="T:System.InvalidOperationException">The value does not represent an array.</exception>
            <returns>The converted array, or <c>null</c> if <paramref name="value"/> is <c>null</c>.</returns>
        </member>
        <member name="T:Google.Datastore.V1.Entity">
             <summary>
              A Datastore data object.
            
              An entity is limited to 1 megabyte when stored. That _roughly_
              corresponds to a limit of 1 megabyte for the serialized form of this
              message.
             </summary>
        </member>
        <member name="F:Google.Datastore.V1.Entity.KeyFieldNumber">
            <summary>Field number for the "key" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Entity.Key">
             <summary>
              The entity's key.
            
              An entity must have a key, unless otherwise documented (for example,
              an entity in `Value.entity_value` may have no key).
              An entity's kind is its key path's last element's kind,
              or null if it has no key.
             </summary>
        </member>
        <member name="F:Google.Datastore.V1.Entity.PropertiesFieldNumber">
            <summary>Field number for the "properties" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Entity.Properties">
            <summary>
             The entity's properties.
             The map's keys are property names.
             A property name matching regex `__.*__` is reserved.
             A reserved property name is forbidden in certain documented contexts.
             The name must not contain more than 500 characters.
             The name cannot be `""`.
            </summary>
        </member>
        <member name="P:Google.Datastore.V1.Entity.Item(System.String)">
            <summary>
            Indexer presenting a null-friendly view of the entity properties.
            </summary>
            <remarks>
            <para>
            When using the getter of this indexer, if the key is not present in
            this entity's set of properties, <c>null</c> is returned.
            </para>
            <para>
            When using the setter of the indexer, setting a null value removes the
            property if it is present. To explicitly set a null value, use <see cref="M:Google.Datastore.V1.Value.ForNull"/>.
            </para>
            </remarks>
            <param name="name">Property name to access. The name itself must not be null.</param>
            <returns>The property value associated with the key.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Entity.ToUpdate">
            <summary>
            Creates a mutation representating an update of this entity.
            </summary>
            <exception cref="T:System.InvalidOperationException">The entity does not have a key.</exception>
        </member>
        <member name="M:Google.Datastore.V1.Entity.ToInsert">
            <summary>
            Creates a mutation representating an insert of this entity.
            </summary>
            <exception cref="T:System.InvalidOperationException">The entity does not have a key.</exception>
        </member>
        <member name="M:Google.Datastore.V1.Entity.ToUpsert">
            <summary>
            Creates a mutation representating an upsert of this entity.
            </summary>
            <exception cref="T:System.InvalidOperationException">The entity does not have a key.</exception>
        </member>
        <member name="M:Google.Datastore.V1.Entity.ToDelete">
            <summary>
            Creates a mutation representating a delete of this entity, via its <see cref="P:Google.Datastore.V1.Entity.Key"/> property.
            </summary>
            <exception cref="T:System.InvalidOperationException">The entity does not have a key.</exception>
        </member>
        <member name="T:Google.Datastore.V1.Filter">
            <summary>
             A holder for any type of filter.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Filter.And(System.Collections.Generic.IEnumerable{Google.Datastore.V1.Filter})">
            <summary>
            Creates a composite filter which is the logical "AND" of all the specified filters.
            </summary>
            <param name="filters">Set of filters to combine. Must not be null or empty, or contain null references.</param>
            <returns>A filter representing the logical "AND" of all the elements in <paramref name="filters"/>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Filter.And(Google.Datastore.V1.Filter[])">
            <summary>
            Creates a composite filter which is the logical "AND" of all the specified filters.
            </summary>
            <param name="filters">Set of filters to combine. Must not be null or empty, or contain null references.</param>
            <returns>A filter representing the logical "AND" of all the elements in <paramref name="filters"/>.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Filter.Equal(System.String,Google.Datastore.V1.Value)">
            <summary>
            Creates a filter to check that the specified property is equal to a given value.
            </summary>
            <param name="propertyName">The name of the property. Must not be null.</param>
            <param name="propertyValue">The value to compare against. May be null, which indicates
            a value with <see cref="P:Google.Datastore.V1.Value.NullValue"/> set.</param>
            <returns>The newly created filter.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Filter.LessThan(System.String,Google.Datastore.V1.Value)">
            <summary>
            Creates a filter to check that the specified property is less than a given value.
            </summary>
            <param name="propertyName">The name of the property. Must not be null.</param>
            <param name="propertyValue">The value to compare against. May be null, which indicates
            a value with <see cref="P:Google.Datastore.V1.Value.NullValue"/> set.</param>
            <returns>The newly created filter.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Filter.GreaterThan(System.String,Google.Datastore.V1.Value)">
            <summary>
            Creates a filter to check that the specified property is greater than a given value.
            </summary>
            <param name="propertyName">The name of the property. Must not be null.</param>
            <param name="propertyValue">The value to compare against. May be null, which indicates
            a value with <see cref="P:Google.Datastore.V1.Value.NullValue"/> set.</param>
            <returns>The newly created filter.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Filter.LessThanOrEqual(System.String,Google.Datastore.V1.Value)">
            <summary>
            Creates a filter to check that the specified property is less than or equal to a given value.
            </summary>
            <param name="propertyName">The name of the property. Must not be null.</param>
            <param name="propertyValue">The value to compare against. May be null, which indicates
            a value with <see cref="P:Google.Datastore.V1.Value.NullValue"/> set.</param>
            <returns>The newly created filter.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Filter.GreaterThanOrEqual(System.String,Google.Datastore.V1.Value)">
            <summary>
            Creates a filter to check that the specified property is greater than or equal to a given value.
            </summary>
            <param name="propertyName">The name of the property. Must not be null.</param>
            <param name="propertyValue">The value to compare against. May be null, which indicates
            a value with <see cref="P:Google.Datastore.V1.Value.NullValue"/> set.</param>
            <returns>The newly created filter.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Filter.HasAncestor(Google.Datastore.V1.Key)">
            <summary>
            Creates a filter to check that an entity has the specified key as an ancestor.
            </summary>
            <param name="ancestorKey">The key to check against. Must not be null.</param>
            <returns>The newly created filter.</returns>
        </member>
        <member name="M:Google.Datastore.V1.Filter.Property(System.String,Google.Datastore.V1.Value,Google.Datastore.V1.PropertyFilter.Types.Operator)">
            <summary>
            Creates a filter comparing the specified property with a given value, using a specified operator.
            </summary>
            <remarks>
            If the operator is known in advance, methods such as <see cref="M:Google.Datastore.V1.Filter.Equal(System.String,Google.Datastore.V1.Value)"/> and <see cref="M:Google.Datastore.V1.Filter.GreaterThan(System.String,Google.Datastore.V1.Value)"/> usually
            allow for better readability. This method is intended for situations where the operator is only known dynamically.
            </remarks>
            <param name="propertyName">The name of the property. Must not be null.</param>
            <param name="propertyValue">The value to compare against. May be null, which indicates
            a value with <see cref="P:Google.Datastore.V1.Value.NullValue"/> set.</param>
            <param name="op">The comparison operator to use. Must be one of the <see cref="T:Google.Datastore.V1.PropertyFilter.Types.Operator"/> values,
            and not <c>Unspecified</c>.</param>
            <returns>The newly created filter.</returns>
        </member>
        <member name="F:Google.Datastore.V1.Filter.CompositeFilterFieldNumber">
            <summary>Field number for the "composite_filter" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Filter.CompositeFilter">
            <summary>
             A composite filter.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Filter.PropertyFilterFieldNumber">
            <summary>Field number for the "property_filter" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Filter.PropertyFilter">
            <summary>
             A filter on a property.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.Filter.FilterTypeOneofCase">
            <summary>Enum of possible cases for the "filter_type" oneof.</summary>
        </member>
        <member name="T:Google.Datastore.V1.KeyFactory">
            <summary>
            Provides a convenient way of producing keys of a specific kind, from a specified parent entity or key,
            or for root entities based on a partition ID.
            </summary>
            <remarks>
            If the key factory is constructed with just a partition ID and kind, then the parent key has an empty
            path, and all keys created by the factory will be root keys. Otherwise, all keys created by the factory will
            be direct children of the parent key, so both the parent key itself and any ancestors of that key will be
            ancestors of the child key. Ancestors can be determined in queries using <see cref="M:Google.Datastore.V1.Filter.HasAncestor(Google.Datastore.V1.Key)"/>.
            </remarks>
        </member>
        <member name="M:Google.Datastore.V1.KeyFactory.#ctor(Google.Datastore.V1.PartitionId,System.String)">
            <summary>
            Creates a key factory for the root of a partition.
            </summary>
            <param name="partitionId">The partition ID for the factory. Must not be null.</param>
            <param name="kind">The kind of root entity keys to create. Must not be null.</param>
        </member>
        <member name="M:Google.Datastore.V1.KeyFactory.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a key factory for the root of a partition.
            </summary>
            <param name="projectId">The project ID for the factory. Must not be null.</param>
            <param name="namespaceId">The namespace ID for the factory. May be null in which case an empty string is used.</param>
            <param name="kind">The kind of root entity keys to create. Must not be null.</param>
        </member>
        <member name="M:Google.Datastore.V1.KeyFactory.#ctor(Google.Datastore.V1.Key,System.String)">
            <summary>
            Creates a key factory for children of the given key. Keys created by the new
            factory will have the same path as this key, but with one extra path element.
            </summary>
            <remarks>
            The key is cloned before being stored, so may be mutated after the factory
            is constructed without affecting the factory.
            </remarks>
            <param name="parent">The "parent" key for keys created by the new factory. Must not be null.</param>
            <param name="kind">The kind of child entity keys to create. Must not be null.</param>
        </member>
        <member name="M:Google.Datastore.V1.KeyFactory.#ctor(Google.Datastore.V1.Entity,System.String)">
            <summary>
            Creates a key factory for children of the given key. Keys created by the new
            factory will have the same path as this key, but with one extra path element.
            </summary>
            <remarks>
            The entity key is cloned before being stored, so may be mutated after the factory
            is constructed without affecting the factory.
            </remarks>
            <param name="parent">The "parent" entity for keys created by the new factory.
            Must not be null, and must have a key.</param>
            <param name="kind">The kind of child entity keys to create. Must not be null.</param>
        </member>
        <member name="M:Google.Datastore.V1.KeyFactory.CreateKey(System.Int64)">
            <summary>
            Creates a key for the given entity ID.
            </summary>
            <param name="id">The numeric entity ID.</param>
            <returns>A key whose final path element contains the given ID.</returns>
        </member>
        <member name="M:Google.Datastore.V1.KeyFactory.CreateKey(System.String)">
            <summary>
            Creates a key for the given entity name.
            </summary>
            <param name="name">The entity name. Must not be null.</param>
            <returns>A key whose final path element contains the given name.</returns>
        </member>
        <member name="M:Google.Datastore.V1.KeyFactory.CreateIncompleteKey">
            <summary>
            Creates a key with only the kind specified in the final path element, intended for insertions where
            the ID is populated by the server.
            </summary>
            <returns>A key with no name or ID in the final path element.</returns>
        </member>
        <member name="T:Google.Datastore.V1.KindExpression">
            <summary>
             A representation of a kind.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.KindExpression.#ctor(System.String)">
            <summary>
            Constructs a <see cref="T:Google.Datastore.V1.KindExpression"/> directly from the name of the kind.
            </summary>
            <param name="name">The name of the kind. Must not be null.</param>
        </member>
        <member name="F:Google.Datastore.V1.KindExpression.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.KindExpression.Name">
            <summary>
             The name of the kind.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.LazyDatastoreQuery">
            <summary>
            A Datastore query which is executed lazily. Iterating over this object will provide a sequence
            of entities; alternatively, all the results can be fetched using <see cref="M:Google.Datastore.V1.LazyDatastoreQuery.GetAllResults"/>,
            or for diagnostic use cases the RPC responses can be viewed using <see cref="M:Google.Datastore.V1.LazyDatastoreQuery.AsResponses"/>.
            The lazy evaluation is important: if you iterate over the query multiple times, it will execute
            multiple times, potentially returning different results each time.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.LazyDatastoreQuery.#ctor(System.Collections.Generic.IEnumerable{Google.Datastore.V1.RunQueryResponse})">
            <summary>
            Constructs a new instance from the given sequence of responses. This constructor
            is only present to facilitate testing; application code will normally obtain instances
            of this class by calling <see cref="M:Google.Datastore.V1.DatastoreDb.RunQueryLazily(Google.Datastore.V1.Query,System.Nullable{Google.Datastore.V1.ReadOptions.Types.ReadConsistency},Google.Api.Gax.Grpc.CallSettings)"/>.
            </summary>
            <remarks>
            The sequence of responses will be returned directly from <see cref="M:Google.Datastore.V1.LazyDatastoreQuery.AsResponses"/>, and
            used to lazily construct the other sequences returned by this class. It should not
            contain any null references.
            </remarks>
            <param name="responses">The responses to return.</param>
        </member>
        <member name="M:Google.Datastore.V1.LazyDatastoreQuery.GetAllResults">
            <summary>
            Reads all the results from this query, until either the query-specified limit or end cursor
            is reached, or there is no more data to read. Note that all the entities are read into memory,
            so this method is not appropriate for use cases where a query could return a very large number
            of results. However, it is the simplest approach to use cases where the query is bounded, such
            as displaying a page of results at a time in a web application.
            </summary>
            <returns>The complete set of query results.</returns>
        </member>
        <member name="M:Google.Datastore.V1.LazyDatastoreQuery.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Google.Datastore.V1.LazyDatastoreQuery.AsResponses">
            <summary>
            This method is for advanced use cases only, where more diagnostic information is required;
            most application code should merely iterate over the query results as <see cref="T:Google.Datastore.V1.Entity"/>
            values, or call <see cref="M:Google.Datastore.V1.LazyDatastoreQuery.GetAllResults"/>.
            The results of this query are returned as a sequence of <see cref="T:Google.Datastore.V1.RunQueryResponse"/> values
            exactly as returned by the Datastore API.
            </summary>
            <returns>A sequence of <see cref="T:Google.Datastore.V1.RunQueryResponse"/> values.</returns>
        </member>
        <member name="M:Google.Datastore.V1.LazyDatastoreQuery.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="T:Google.Datastore.V1.Projection">
            <summary>
             A representation of a property in a projection.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Projection.#ctor(System.String)">
            <summary>
            Creates a projection with a property of the given name.
            </summary>
            <param name="propertyName">The name of the property in the projection.</param>
        </member>
        <member name="F:Google.Datastore.V1.Projection.PropertyFieldNumber">
            <summary>Field number for the "property" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Projection.Property">
            <summary>
             The property to project.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.PropertyReference">
            <summary>
             A reference to a property relative to the kind expressions.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.PropertyReference.#ctor(System.String)">
            <summary>
            Creates a property reference for the given name.
            </summary>
            <param name="propertyName">The name of the property.</param>
        </member>
        <member name="F:Google.Datastore.V1.PropertyReference.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.PropertyReference.Name">
            <summary>
             The name of the property.
             If name includes "."s, it may be interpreted as a property name path.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.QueryReflection">
            <summary>Holder for reflection information generated from google/datastore/v1/query.proto</summary>
        </member>
        <member name="P:Google.Datastore.V1.QueryReflection.Descriptor">
            <summary>File descriptor for google/datastore/v1/query.proto</summary>
        </member>
        <member name="T:Google.Datastore.V1.EntityResult">
            <summary>
             The result of fetching an entity from Datastore.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.EntityResult.EntityFieldNumber">
            <summary>Field number for the "entity" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.EntityResult.Entity">
            <summary>
             The resulting entity.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.EntityResult.VersionFieldNumber">
            <summary>Field number for the "version" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.EntityResult.Version">
             <summary>
              The version of the entity, a strictly positive number that monotonically
              increases with changes to the entity.
            
              This field is set for [`FULL`][google.datastore.v1.EntityResult.ResultType.FULL] entity
              results.
            
              For [missing][google.datastore.v1.LookupResponse.missing] entities in `LookupResponse`, this
              is the version of the snapshot that was used to look up the entity, and it
              is always set except for eventually consistent reads.
             </summary>
        </member>
        <member name="F:Google.Datastore.V1.EntityResult.CursorFieldNumber">
            <summary>Field number for the "cursor" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.EntityResult.Cursor">
            <summary>
             A cursor that points to the position after the result entity.
             Set only when the `EntityResult` is part of a `QueryResultBatch` message.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.EntityResult.Types">
            <summary>Container for nested types declared in the EntityResult message type.</summary>
        </member>
        <member name="T:Google.Datastore.V1.EntityResult.Types.ResultType">
            <summary>
             Specifies what data the 'entity' field contains.
             A `ResultType` is either implied (for example, in `LookupResponse.missing`
             from `datastore.proto`, it is always `KEY_ONLY`) or specified by context
             (for example, in message `QueryResultBatch`, field `entity_result_type`
             specifies a `ResultType` for all the values in field `entity_results`).
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.EntityResult.Types.ResultType.Unspecified">
            <summary>
             Unspecified. This value is never used.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.EntityResult.Types.ResultType.Full">
            <summary>
             The key and properties.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.EntityResult.Types.ResultType.Projection">
            <summary>
             A projected subset of properties. The entity may have no key.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.EntityResult.Types.ResultType.KeyOnly">
            <summary>
             Only the key.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.Query">
            <summary>
             A query for entities.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Query.ProjectionFieldNumber">
            <summary>Field number for the "projection" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Query.Projection">
            <summary>
             The projection to return. Defaults to returning all properties.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Query.KindFieldNumber">
            <summary>Field number for the "kind" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Query.Kind">
            <summary>
             The kinds to query (if empty, returns entities of all kinds).
             Currently at most 1 kind may be specified.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Query.FilterFieldNumber">
            <summary>Field number for the "filter" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Query.Filter">
            <summary>
             The filter to apply.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Query.OrderFieldNumber">
            <summary>Field number for the "order" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Query.Order">
            <summary>
             The order to apply to the query results (if empty, order is unspecified).
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Query.DistinctOnFieldNumber">
            <summary>Field number for the "distinct_on" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Query.DistinctOn">
            <summary>
             The properties to make distinct. The query results will contain the first
             result for each distinct combination of values for the given properties
             (if empty, all results are returned).
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Query.StartCursorFieldNumber">
            <summary>Field number for the "start_cursor" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Query.StartCursor">
            <summary>
             A starting point for the query results. Query cursors are
             returned in query result batches and
             [can only be used to continue the same query](https://cloud.google.com/datastore/docs/concepts/queries#cursors_limits_and_offsets).
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Query.EndCursorFieldNumber">
            <summary>Field number for the "end_cursor" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Query.EndCursor">
            <summary>
             An ending point for the query results. Query cursors are
             returned in query result batches and
             [can only be used to limit the same query](https://cloud.google.com/datastore/docs/concepts/queries#cursors_limits_and_offsets).
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Query.OffsetFieldNumber">
            <summary>Field number for the "offset" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Query.Offset">
            <summary>
             The number of results to skip. Applies before limit, but after all other
             constraints. Optional. Must be >= 0 if specified.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.Query.LimitFieldNumber">
            <summary>Field number for the "limit" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.Query.Limit">
            <summary>
             The maximum number of results to return. Applies after all other
             constraints. Optional.
             Unspecified is interpreted as no limit.
             Must be >= 0 if specified.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.Query.#ctor(System.String)">
            <summary>
            Creates a query over the given kind.
            </summary>
            <param name="kind">The kind of the query. Must not be null.</param>
        </member>
        <member name="T:Google.Datastore.V1.PropertyOrder">
            <summary>
             The desired order for a specific property.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.PropertyOrder.PropertyFieldNumber">
            <summary>Field number for the "property" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.PropertyOrder.Property">
            <summary>
             The property to order by.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.PropertyOrder.DirectionFieldNumber">
            <summary>Field number for the "direction" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.PropertyOrder.Direction">
            <summary>
             The direction to order by. Defaults to `ASCENDING`.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.PropertyOrder.Types">
            <summary>Container for nested types declared in the PropertyOrder message type.</summary>
        </member>
        <member name="T:Google.Datastore.V1.PropertyOrder.Types.Direction">
            <summary>
             The sort direction.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.PropertyOrder.Types.Direction.Unspecified">
            <summary>
             Unspecified. This value must not be used.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.PropertyOrder.Types.Direction.Ascending">
            <summary>
             Ascending.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.PropertyOrder.Types.Direction.Descending">
            <summary>
             Descending.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.CompositeFilter">
            <summary>
             A filter that merges multiple other filters using the given operator.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.CompositeFilter.OpFieldNumber">
            <summary>Field number for the "op" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.CompositeFilter.Op">
            <summary>
             The operator for combining multiple filters.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.CompositeFilter.FiltersFieldNumber">
            <summary>Field number for the "filters" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.CompositeFilter.Filters">
            <summary>
             The list of filters to combine.
             Must contain at least one filter.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.CompositeFilter.Types">
            <summary>Container for nested types declared in the CompositeFilter message type.</summary>
        </member>
        <member name="T:Google.Datastore.V1.CompositeFilter.Types.Operator">
            <summary>
             A composite filter operator.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.CompositeFilter.Types.Operator.Unspecified">
            <summary>
             Unspecified. This value must not be used.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.CompositeFilter.Types.Operator.And">
            <summary>
             The results are required to satisfy each of the combined filters.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.PropertyFilter">
            <summary>
             A filter on a specific property.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.PropertyFilter.PropertyFieldNumber">
            <summary>Field number for the "property" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.PropertyFilter.Property">
            <summary>
             The property to filter by.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.PropertyFilter.OpFieldNumber">
            <summary>Field number for the "op" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.PropertyFilter.Op">
            <summary>
             The operator to filter by.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.PropertyFilter.ValueFieldNumber">
            <summary>Field number for the "value" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.PropertyFilter.Value">
            <summary>
             The value to compare the property to.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.PropertyFilter.Types">
            <summary>Container for nested types declared in the PropertyFilter message type.</summary>
        </member>
        <member name="T:Google.Datastore.V1.PropertyFilter.Types.Operator">
            <summary>
             A property filter operator.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.PropertyFilter.Types.Operator.Unspecified">
            <summary>
             Unspecified. This value must not be used.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.PropertyFilter.Types.Operator.LessThan">
            <summary>
             Less than.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.PropertyFilter.Types.Operator.LessThanOrEqual">
            <summary>
             Less than or equal.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.PropertyFilter.Types.Operator.GreaterThan">
            <summary>
             Greater than.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.PropertyFilter.Types.Operator.GreaterThanOrEqual">
            <summary>
             Greater than or equal.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.PropertyFilter.Types.Operator.Equal">
            <summary>
             Equal.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.PropertyFilter.Types.Operator.HasAncestor">
            <summary>
             Has ancestor.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.GqlQuery">
            <summary>
             A [GQL query](https://cloud.google.com/datastore/docs/apis/gql/gql_reference).
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.GqlQuery.QueryStringFieldNumber">
            <summary>Field number for the "query_string" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.GqlQuery.QueryString">
            <summary>
             A string of the format described
             [here](https://cloud.google.com/datastore/docs/apis/gql/gql_reference).
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.GqlQuery.AllowLiteralsFieldNumber">
            <summary>Field number for the "allow_literals" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.GqlQuery.AllowLiterals">
            <summary>
             When false, the query string must not contain any literals and instead must
             bind all values. For example,
             `SELECT * FROM Kind WHERE a = 'string literal'` is not allowed, while
             `SELECT * FROM Kind WHERE a = @value` is.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.GqlQuery.NamedBindingsFieldNumber">
            <summary>Field number for the "named_bindings" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.GqlQuery.NamedBindings">
             <summary>
              For each non-reserved named binding site in the query string, there must be
              a named parameter with that name, but not necessarily the inverse.
            
              Key must match regex `[A-Za-z_$][A-Za-z_$0-9]*`, must not match regex
              `__.*__`, and must not be `""`.
             </summary>
        </member>
        <member name="F:Google.Datastore.V1.GqlQuery.PositionalBindingsFieldNumber">
            <summary>Field number for the "positional_bindings" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.GqlQuery.PositionalBindings">
             <summary>
              Numbered binding site @1 references the first numbered parameter,
              effectively using 1-based indexing, rather than the usual 0.
            
              For each binding site numbered i in `query_string`, there must be an i-th
              numbered parameter. The inverse must also be true.
             </summary>
        </member>
        <member name="T:Google.Datastore.V1.GqlQueryParameter">
            <summary>
             A binding parameter for a GQL query.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.GqlQueryParameter.ValueFieldNumber">
            <summary>Field number for the "value" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.GqlQueryParameter.Value">
            <summary>
             A value parameter.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.GqlQueryParameter.CursorFieldNumber">
            <summary>Field number for the "cursor" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.GqlQueryParameter.Cursor">
            <summary>
             A query cursor. Query cursors are returned in query
             result batches.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.GqlQueryParameter.ParameterTypeOneofCase">
            <summary>Enum of possible cases for the "parameter_type" oneof.</summary>
        </member>
        <member name="T:Google.Datastore.V1.QueryResultBatch">
            <summary>
             A batch of results produced by a query.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.QueryResultBatch.SkippedResultsFieldNumber">
            <summary>Field number for the "skipped_results" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.QueryResultBatch.SkippedResults">
            <summary>
             The number of results skipped, typically because of an offset.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.QueryResultBatch.SkippedCursorFieldNumber">
            <summary>Field number for the "skipped_cursor" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.QueryResultBatch.SkippedCursor">
            <summary>
             A cursor that points to the position after the last skipped result.
             Will be set when `skipped_results` != 0.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.QueryResultBatch.EntityResultTypeFieldNumber">
            <summary>Field number for the "entity_result_type" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.QueryResultBatch.EntityResultType">
            <summary>
             The result type for every entity in `entity_results`.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.QueryResultBatch.EntityResultsFieldNumber">
            <summary>Field number for the "entity_results" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.QueryResultBatch.EntityResults">
            <summary>
             The results for this batch.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.QueryResultBatch.EndCursorFieldNumber">
            <summary>Field number for the "end_cursor" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.QueryResultBatch.EndCursor">
            <summary>
             A cursor that points to the position after the last result in the batch.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.QueryResultBatch.MoreResultsFieldNumber">
            <summary>Field number for the "more_results" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.QueryResultBatch.MoreResults">
            <summary>
             The state of the query after the current batch.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.QueryResultBatch.SnapshotVersionFieldNumber">
            <summary>Field number for the "snapshot_version" field.</summary>
        </member>
        <member name="P:Google.Datastore.V1.QueryResultBatch.SnapshotVersion">
             <summary>
              The version number of the snapshot this batch was returned from.
              This applies to the range of results from the query's `start_cursor` (or
              the beginning of the query if no cursor was given) to this batch's
              `end_cursor` (not the query's `end_cursor`).
            
              In a single transaction, subsequent query result batches for the same query
              can have a greater snapshot version number. Each batch's snapshot version
              is valid for all preceding batches.
             </summary>
        </member>
        <member name="T:Google.Datastore.V1.QueryResultBatch.Types">
            <summary>Container for nested types declared in the QueryResultBatch message type.</summary>
        </member>
        <member name="T:Google.Datastore.V1.QueryResultBatch.Types.MoreResultsType">
            <summary>
             The possible values for the `more_results` field.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.QueryResultBatch.Types.MoreResultsType.Unspecified">
            <summary>
             Unspecified. This value is never used.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.QueryResultBatch.Types.MoreResultsType.NotFinished">
            <summary>
             There may be additional batches to fetch from this query.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.QueryResultBatch.Types.MoreResultsType.MoreResultsAfterLimit">
            <summary>
             The query is finished, but there may be more results after the limit.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.QueryResultBatch.Types.MoreResultsType.MoreResultsAfterCursor">
            <summary>
             The query is finished, but there may be more results after the end
             cursor.
            </summary>
        </member>
        <member name="F:Google.Datastore.V1.QueryResultBatch.Types.MoreResultsType.NoMoreResults">
            <summary>
             The query has been exhausted.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.QueryExtensions">
            <summary>
            Extension methods around queries.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.QueryExtensions.Add(Google.Protobuf.Collections.RepeatedField{Google.Datastore.V1.Projection},System.String)">
            <summary>
            Adds a projection with the given property name to the repeated field.
            This enables projections to be specified in a query with a collection initializer
            in C# 6 and later.
            </summary>
            <param name="projections">The collection of projections to add to. Must not be null.</param>
            <param name="propertyName">The property to project. Must not be null.</param>
        </member>
        <member name="M:Google.Datastore.V1.QueryExtensions.Add(Google.Protobuf.Collections.RepeatedField{Google.Datastore.V1.PropertyReference},System.String)">
            <summary>
            Adds an entry to the list of property references.
            This enables repeated property reference fields (such as <see cref="P:Google.Datastore.V1.Query.DistinctOn"/> 
            to be specified in a query with a collection initializer
            in C# 6 and later.
            </summary>
            <param name="propertyReferences">The collection of property references to add to. Must not be null.</param>
            <param name="propertyName">The property to project. Must not be null.</param>
        </member>
        <member name="M:Google.Datastore.V1.QueryExtensions.Add(Google.Protobuf.Collections.RepeatedField{Google.Datastore.V1.PropertyOrder},System.String,Google.Datastore.V1.PropertyOrder.Types.Direction)">
            <summary>
            Adds an ordering by property name and direction.
            </summary>
            <param name="orderings">The ordering field to add the ordering to. Must not be null.</param>
            <param name="propertyName">The name of the property to order by. Must not be null.</param>
            <param name="direction">The direction to order by. Must be <c>Ascending</c> or <c>Descending</c>.</param>
        </member>
        <member name="M:Google.Datastore.V1.QueryExtensions.Add(Google.Protobuf.Collections.RepeatedField{Google.Datastore.V1.PropertyOrder},System.String)">
            <summary>
            Adds an ascending ordering by property name. The ordering is implicitly ascending.
            </summary>
            <param name="orderings">The ordering field to add the ordering to. Must not be null.</param>
            <param name="propertyName">The name of the property to order by. Must not be null.</param>
        </member>
        <member name="T:Google.Datastore.V1.QueryStreamer">
            <summary>
            Creates a stream of responses (synchronous and asynchronous) from a query.
            </summary>
        </member>
        <member name="T:Google.Datastore.V1.ValueExtensions">
            <summary>
            Extension methods on <see cref="T:Google.Datastore.V1.Value"/>.
            </summary>
        </member>
        <member name="M:Google.Datastore.V1.ValueExtensions.OrNull(Google.Datastore.V1.Value)">
            <summary>
            Returns <paramref name="value"/> if it has a kind other than <c>NullValue</c>,
            or <c>null</c> otherwise. If <paramref name="value"/> is null, this method returns <c>null</c>.
            </summary>
            <remarks>
            The reverse of this operation would simply be <c>value ?? Value.ForNull()</c> using the
            null-coalescing operator.
            </remarks>
            <param name="value">A <see cref="T:Google.Datastore.V1.Value"/> reference, which may be null.</param>
            <returns><paramref name="value"/> if it is a non-null reference to a value with a kind
            other than <c>NullValue</c>; <c>null</c> otherwise</returns>
        </member>
    </members>
</doc>
